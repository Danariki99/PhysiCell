INFO:numexpr.utils:Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
INFO:numexpr.utils:NumExpr defaulting to 8 threads.
DEBUG:root:self.current_dir = /Users/macklinp/GitHub/PhysiCell
DEBUG:root:self.studio_root_dir = /Users/macklinp/GitHub/PhysiCell-Studio-2.24.0
DEBUG:root:self.config_dir = /Users/macklinp/GitHub/PhysiCell/config
DEBUG:root:=======================  microenv populate_tree  ======================= 
DEBUG:root:dc_ic_units =  mmHg
DEBUG:root:dc_bc_units = mmHg
DEBUG:root:bv = <Element 'boundary_value' at 0x157e48220>
DEBUG:root:   -------- substrate:  dirichlet_xmin = 0
DEBUG:root:bv = <Element 'boundary_value' at 0x157e482c0>
DEBUG:root:bv = <Element 'boundary_value' at 0x157e48360>
DEBUG:root:bv = <Element 'boundary_value' at 0x157e48400>
DEBUG:root:bv = <Element 'boundary_value' at 0x157e484a0>
DEBUG:root:bv = <Element 'boundary_value' at 0x157e48540>
DEBUG:root:------- options: <Element 'calculate_gradients' at 0x157e48630>
DEBUG:root:------- options: <Element 'track_internalized_substrates_in_each_agent' at 0x157e486d0>
DEBUG:root:------- options: <Element 'initial_condition' at 0x157e48720>
DEBUG:root:------- options: <Element 'dirichlet_nodes' at 0x157e48860>
DEBUG:root:

=======================  leaving microenv populate_tree  =====================
DEBUG:root:
====================== create_cycle_tab ===================
DEBUG:root: new stacked widget: trate live -------------> 0
DEBUG:root: new stacked widget: trate Ki67 -------------> 1
DEBUG:root: new stacked widget: t02 -------------> 2
DEBUG:root: new stacked widget: trate_flowcyto -------------> 3
DEBUG:root: new stacked widget: flow cyto sep -------------> 4
DEBUG:root: new stacked widget: trate_quiescent -------------> 5
DEBUG:root: new stacked widget: duration live -------------> 6
DEBUG:root: new stacked widget: duration Ki67 -------------> 7
DEBUG:root: new stacked widget: t02 -------------> 8
DEBUG:root: new stacked widget: duration_flowcyto -------------> 9
DEBUG:root: new stacked widget: flow cyto sep -------------> 10
DEBUG:root: new stacked widget: duration_quiescent -------------> 11
DEBUG:root:intracellular is Unkown
DEBUG:root:studio.py: first_cell_def_name= default
DEBUG:root:cell_def_tab.py: ------- fill_substrates_comboboxes
DEBUG:root: --> substrate
DEBUG:root:------ motility_substrate_changed_cb(): idx = 0
DEBUG:root:       motility_substrate_changed_cb(): self.current_cell_def = None
DEBUG:root:------ motility2_substrate_changed_cb(): idx = 0
DEBUG:root:   text (subname) = substrate
DEBUG:root:=======================  populate_tree_cell_defs(): ======================= 
DEBUG:root:    cell_def_tab.param_d = {}
DEBUG:root:

=======================  validate_cell_defs(): ======================= 
DEBUG:root:Checking default
DEBUG:root:=======================  end validate_cell_defs(): =======================


DEBUG:root:----- cell_def.tag= cell_definition
DEBUG:root:
--------new_interaction_params(): cdname_new= default
DEBUG:root:
--------new_intracellular_params(): cdname_new= default
DEBUG:root:------- new_custom_data_params() -----
DEBUG:root:
===== populate_tree():  cycle
DEBUG:root: >> cycle_path= .//cell_definition[1]//phenotype//cycle
DEBUG:root:   cycle code= 6
DEBUG:root: >> phase_transition_path 
DEBUG:root: >> phase_durations_path =.//cell_definition[1]//phenotype//cycle//phase_durations
DEBUG:root: >> pd_uep =<Element 'phase_durations' at 0x157e48bd0>
DEBUG:root:phase_duration= <Element 'duration' at 0x157e48c70>
DEBUG:root:------------ sval for phase duration= 300.0
DEBUG:root:phase_duration= <Element 'duration' at 0x157e48d10>
DEBUG:root:------------ sval for phase duration= 480
DEBUG:root:phase_duration= <Element 'duration' at 0x157e48db0>
DEBUG:root:------------ sval for phase duration= 240
DEBUG:root:phase_duration= <Element 'duration' at 0x157e48e50>
DEBUG:root:------------ sval for phase duration= 60
DEBUG:root:
===== populate_tree():  death
DEBUG:root:death_uep=<Element 'death' at 0x157e48f90>
DEBUG:root:-------- parsing apoptosis!
DEBUG:root: >> pd_uep =<Element 'phase_durations' at 0x157e4c1d0>
DEBUG:root:phase_duration= <Element 'duration' at 0x157e4c270>
DEBUG:root:index= 0
DEBUG:root:-------- parsing necrosis!
DEBUG:root: >> pd_uep =<Element 'phase_durations' at 0x157e4cb80>
DEBUG:root:<Element 'duration' at 0x157e4cc20>
DEBUG:root:index= 0
DEBUG:root:<Element 'duration' at 0x157e4ccc0>
DEBUG:root:index= 1
DEBUG:root:volume_path=.//cell_definition[1]//phenotype//volume//
DEBUG:root:
===== populate_tree():  mechanics
DEBUG:root:mechanics_path=.//cell_definition[1]//phenotype//mechanics//
DEBUG:root:---- cell_interactions_path= .//cell_definition[1]//phenotype//mechanics//cell_adhesion_affinities
DEBUG:root:---- found cell_adhesion_affinities_path:
DEBUG:root:--> {'default': '1'}
DEBUG:root:
===== populate_tree():  motility
DEBUG:root:motility_path=.//cell_definition[1]//phenotype//motility//
DEBUG:root:
----------- populate_tree_cell_defs.py: cell_def_name= default,  cell_def_tab.param_d[cell_def_name]["motility_chemotaxis_substrate"] = substrate
DEBUG:root:motility_advanced_chemotaxis_path= .//cell_definition[1]//phenotype//motility//options//advanced_chemotaxis//
DEBUG:root:chemotactic_sensitivity= {'substrate': '0.0'}
DEBUG:root:sensitivity_path= .//cell_definition[1]//phenotype//motility//options//advanced_chemotaxis//chemotactic_sensitivities
DEBUG:root:---- found chemotactic_sensitivities: <Element 'chemotactic_sensitivities' at 0x157e56270>
DEBUG:root:subelm=<Element 'chemotactic_sensitivity' at 0x157e56310>
DEBUG:root: chemotactic_sensitivity--> substrate = 0.0
DEBUG:root:{'substrate': '0.0'}
DEBUG:root:------ motility2_substrate_changed_cb(): idx = 0
DEBUG:root:   text (subname) = substrate
DEBUG:root:    motility_advanced_chemotaxis_substrate= substrate
DEBUG:root:   chemotactic_sensitivity = {'substrate': '0.0'}
DEBUG:root:----- chemo_sensitivity_changed() = 0.0
DEBUG:root:----- chemo_sensitivity_changed(): subname = substrate
DEBUG:root:     chemotactic_sensitivity (dict)= {'substrate': '0.0'}
DEBUG:root:
===== populate_tree():  secretion
DEBUG:root:secretion_path = .//cell_definition[1]//phenotype//secretion//
DEBUG:root:uep_secretion = <Element 'secretion' at 0x157e564f0>
DEBUG:root:0) -- secretion substrate = substrate
DEBUG:root:------ done parsing secretion:
DEBUG:root:
===== populate_tree():  cell_interactions
DEBUG:root:---- cell_interactions_path= .//cell_definition[1]//phenotype//cell_interactions
DEBUG:root:---- found cell_interactions:
DEBUG:root:uep2= <Element 'live_phagocytosis_rates' at 0x157e56c70>
DEBUG:root: live_phagocytosis_rate= {'default': '0'}
DEBUG:root: attack_rate= {'default': '0'}
DEBUG:root: fusion_rate= {'default': '0'}
DEBUG:root:------ done parsing cell_interactions:
DEBUG:root:---- transformation_rates_path = .//cell_definition[1]//phenotype//cell_transformations//transformation_rates
DEBUG:root: transformation_rate= {'default': '0'}
DEBUG:root:------ done parsing cell_transformations:
DEBUG:root:
===== populate_tree():  molecular
DEBUG:root:
===== populate_tree():  intracellular
DEBUG:root:------ done parsing intracellular:
DEBUG:root:
===== populate_tree():  custom data
DEBUG:root:uep_custom_data= <Element 'custom_data' at 0x157e5a5e0>
DEBUG:root:--------------- populate_tree: (empty)custom_data = {}
DEBUG:root:var.attrib.keys() = dict_keys(['conserved', 'units', 'description'])
DEBUG:root:populate: cell_def_name= default --> custom_data: {'sample': ['1.0', False]}
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> duration
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>duration
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:
----- update_motility_params():  cdname= default
DEBUG:root:     setting motility_substrate_dropdown (for cdname= default ) = substrate
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= default ) = substrate
DEBUG:root:    chemotactic_sensitivity= {'substrate': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = default
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = substrate
DEBUG:root:{'substrate': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '0', 'net_export_rate': '0'}}
DEBUG:root:cell_def_tab.py: ------- fill_celltypes_comboboxes
DEBUG:root:

------------  user_params_tab: fill_gui --------------
DEBUG:root:studio.py: self.current_dir = /Users/macklinp/GitHub/PhysiCell
DEBUG:root:studio.py: creating ICs, Run, and Plot tabs
DEBUG:matplotlib.pyplot:Loaded backend Qt5Agg version unknown.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalParthian-Regular.ttf', name='Noto Sans Inscriptional Parthian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSundanese-Regular.ttf', name='Noto Sans Sundanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMahajani-Regular.ttf', name='Noto Sans Mahajani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMono.ttf', name='.SF NS Mono', style='normal', variant='normal', weight=295, stretch='normal', size='scalable')) = 10.14975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerif.ttc', name='PT Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSans.ttc', name='PT Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SuperClarendon.ttc', name='Superclarendon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGlagolitic-Regular.ttf', name='Noto Sans Glagolitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Brush Script.ttf', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTMono.ttc', name='PT Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagalog-Regular.ttf', name='Noto Sans Tagalog', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHatran-Regular.ttf', name='Noto Sans Hatran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldSouthArabian-Regular.ttf', name='Noto Sans Old South Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCoptic-Regular.ttf', name='Noto Sans Coptic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSRounded.ttf', name='.SF NS Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiLe-Regular.ttf', name='Noto Sans Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NewYorkItalic.ttf', name='.New York', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansChakma-Regular.ttf', name='Noto Sans Chakma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Apple Chancery.ttf', name='Apple Chancery', style='normal', variant='normal', weight=0, stretch='normal', size='scalable')) = 10.43
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPermic-Regular.ttf', name='Noto Sans Old Permic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorBangla.ttc', name='Kohinoor Bangla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/MuktaMahee.ttc', name='Mukta Mahee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold.ttf', name='Arial Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRejang-Regular.ttf', name='Noto Sans Rejang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuhid-Regular.ttf', name='Noto Sans Buhid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Times.ttc', name='Times', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gujarati Sangam MN.ttc', name='Gujarati Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Nadeem.ttc', name='Nadeem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDBol.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralItalic.otf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Raanana.ttc', name='Raanana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi Gold.ttf', name='Mishafi Gold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkboard.ttc', name='Chalkboard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKayahLi-Regular.ttf', name='Noto Sans Kayah Li', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearB-Regular.ttf', name='Noto Sans Linear B', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil Sangam MN.ttc', name='Tamil Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next Condensed.ttc', name='Avenir Next Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymReg.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansEgyptianHieroglyphs-Regular.ttf', name='Noto Sans Egyptian Hieroglyphs', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GillSans.ttc', name='Gill Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorTelugu.ttc', name='Kohinoor Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhagsPa-Regular.ttf', name='Noto Sans PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompact.ttf', name='.SF Compact', style='normal', variant='normal', weight=1000, stretch='normal', size='scalable')) = 10.62
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu Sangam MN.ttc', name='Telugu Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/PingFang.ttc', name='PingFang HK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next.ttc', name='Avenir Next', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farisi.ttf', name='Farisi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneral.otf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni Ornaments.ttf', name='Bodoni Ornaments', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Seravek.ttc', name='Seravek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSyriac-Regular.ttf', name='Noto Sans Syriac', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AmericanTypewriter.ttc', name='American Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya Sangam MN.ttc', name='Oriya Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDReg.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSaurashtra-Regular.ttf', name='Noto Sans Saurashtra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 2.ttf', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMarchen-Regular.ttf', name='Noto Sans Marchen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBolIta.otf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ChalkboardSE.ttc', name='Chalkboard SE', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFiveSymReg.otf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ArialHB.ttc', name='Arial Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Cochin.ttc', name='Cochin', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Damascus.ttc', name='Damascus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text.ttc', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DecoTypeNaskh.ttc', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao MN.ttc', name='Lao MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AlBayan.ttc', name='Al Bayan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/GeezaPro.ttc', name='Geeza Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWarangCiti-Regular.ttf', name='Noto Sans Warang Citi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W4.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sana.ttc', name='Sana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Thuluth.ttf', name='Diwan Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Medium.ttc', name='Heiti TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymBol.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTirhuta-Regular.ttf', name='Noto Sans Tirhuta', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar Sangam MN.ttc', name='Myanmar Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAvestan-Regular.ttf', name='Noto Sans Avestan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W5.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansManichaean-Regular.ttf', name='Noto Sans Manichaean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifYezidi-Regular.otf', name='Noto Serif Yezidi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Herculanum.ttf', name='Herculanum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Courier.ttc', name='Courier', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Galvji.ttc', name='Galvji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/InaiMathi-MN.ttc', name='InaiMathi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhudawadi-Regular.ttf', name='Noto Sans Khudawadi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ITFDevanagari.ttc', name='ITF Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Black.ttf', name='Arial Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMro-Regular.ttf', name='Noto Sans Mro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Kufi.ttc', name='Diwan Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansArmenian.ttc', name='Noto Sans Armenian', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Futura.ttc', name='Futura', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansYi-Regular.ttf', name='Noto Sans Yi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya MN.ttc', name='Oriya MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Noteworthy.ttc', name='Noteworthy', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansDuployan-Regular.ttf', name='Noto Sans Duployan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmReg.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpReg.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/HelveticaNeue.ttc', name='Helvetica Neue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kefa.ttc', name='Kefa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansThaana-Regular.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansJavanese-Regular.otf', name='Noto Sans Javanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanifiRohingya-Regular.ttf', name='Noto Sans Hanifi Rohingya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi MN.ttc', name='Gurmukhi MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NewPeninimMT.ttc', name='New Peninim MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Waseem.ttc', name='Waseem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W2.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWancho-Regular.ttf', name='Noto Sans Wancho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldTurkic-Regular.ttf', name='Noto Sans Old Turkic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SignPainter.ttc', name='SignPainter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 Smallcaps Book.ttf', name='Bodoni 72 Smallcaps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Menlo.ttc', name='Menlo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansModi-Regular.ttf', name='Noto Sans Modi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Symbols.ttf', name='Apple Symbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansMyanmar.ttc', name='Noto Sans Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil MN.ttc', name='Tamil MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPsalterPahlavi-Regular.ttf', name='Noto Sans Psalter Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Optima.ttc', name='Optima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoNastaliq.ttc', name='Noto Nastaliq Urdu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVarBol.otf', name='STIXVariants', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/AppleSDGothicNeo.ttc', name='Apple SD Gothic Neo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/LucidaGrande.ttc', name='Lucida Grande', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 2.872272727272727
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer MN.ttc', name='Khmer MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Shree714.ttc', name='Shree Devanagari 714', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma Bold.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Phosphate.ttc', name='Phosphate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W6.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkduster.ttf', name='Chalkduster', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMonoItalic.ttf', name='.SF NS Mono', style='italic', variant='normal', weight=295, stretch='normal', size='scalable')) = 11.14975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMandaic-Regular.ttf', name='Noto Sans Mandaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeeteiMayek-Regular.ttf', name='Noto Sans Meetei Mayek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada Sangam MN.ttc', name='Kannada Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PlantagenetCherokee.ttf', name='Plantagenet Cherokee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhojki-Regular.ttf', name='Noto Sans Khojki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Hiragino Sans GB.ttc', name='Hiragino Sans GB', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Palatino.ttc', name='Palatino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSylotiNagri-Regular.ttf', name='Noto Sans Syloti Nagri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymBol.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSoraSompeng-Regular.ttf', name='Noto Sans Sora Sompeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMendeKikakui-Regular.ttf', name='Noto Sans Mende Kikakui', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansKannada.ttc', name='Noto Sans Kannada', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Alternate Bold.ttf', name='DIN Alternate', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorGujarati.ttc', name='Kohinoor Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Nile.ttc', name='Al Nile', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKaithi-Regular.ttf', name='Noto Sans Kaithi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGunjalaGondi-Regular.otf', name='Noto Sans Gunjala Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLepcha-Regular.ttf', name='Noto Sans Lepcha', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCypriot-Regular.ttf', name='Noto Sans Cypriot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W7.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W8.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpBol.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactItalic.ttf', name='.SF Compact', style='italic', variant='normal', weight=1000, stretch='normal', size='scalable')) = 11.62
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTakri-Regular.ttf', name='Noto Sans Takri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam MN.ttc', name='Malayalam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DevanagariMT.ttc', name='Devanagari MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPahawhHmong-Regular.ttf', name='Noto Sans Pahawh Hmong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPauCinHau-Regular.ttf', name='Noto Sans Pau Cin Hau', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymReg.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mshtakan.ttc', name='Mshtakan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymBol.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagbanwa-Regular.ttf', name='Noto Sans Tagbanwa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBamum-Regular.ttf', name='Noto Sans Bamum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Condensed Bold.ttf', name='DIN Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao Sangam MN.ttf', name='Lao Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W1.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansUgaritic-Regular.ttf', name='Noto Sans Ugaritic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNKo-Regular.ttf', name='Noto Sans NKo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trattatello.ttf', name='Trattatello', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W0.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir.ttc', name='Avenir', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Athelas.ttc', name='Athelas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Corsiva.ttc', name='Corsiva Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUni.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPersian-Regular.ttf', name='Noto Sans Old Persian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerifCaption.ttc', name='PT Serif Caption', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Geneva.ttf', name='Geneva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.595454545454545
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSharada-Regular.ttf', name='Noto Sans Sharada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansElbasan-Regular.ttf', name='Noto Sans Elbasan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansImperialAramaic-Regular.ttf', name='Noto Sans Imperial Aramaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBatak-Regular.ttf', name='Noto Sans Batak', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBol.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Monaco.ttf', name='Monaco', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLydian-Regular.ttf', name='Noto Sans Lydian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMiao-Regular.ttf', name='Noto Sans Miao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi.ttf', name='Gurmukhi MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCaucasianAlbanian-Regular.ttf', name='Noto Sans Caucasian Albanian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifAhom-Regular.ttf', name='Noto Serif Ahom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuginese-Regular.ttf', name='Noto Sans Buginese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCham-Regular.ttf', name='Noto Sans Cham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla MN.ttc', name='Bangla MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymReg.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SukhumvitSet.ttc', name='Sukhumvit Set', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Light.ttc', name='Heiti TC', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSiddham-Regular.ttf', name='Noto Sans Siddham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow.ttf', name='Arial Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKharoshthi-Regular.ttf', name='Noto Sans Kharoshthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Keyboard.ttf', name='.Keyboard', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/EuphemiaCAS.ttc', name='Euphemia UCAS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanunoo-Regular.ttf', name='Noto Sans Hanunoo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmReg.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baskerville.ttc', name='Baskerville', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Microsoft Sans Serif.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bradley Hand Bold.ttf', name='Bradley Hand', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMongolian-Regular.ttf', name='Noto Sans Mongolian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBassaVah-Regular.ttf', name='Noto Sans Bassa Vah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLycian-Regular.ttf', name='Noto Sans Lycian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Kohinoor.ttc', name='Kohinoor Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SnellRoundhand.ttc', name='Snell Roundhand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer Sangam MN.ttf', name='Khmer Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCarian-Regular.ttf', name='Noto Sans Carian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTifinagh-Regular.ttf', name='Noto Sans Tifinagh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymReg.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Luminari.ttf', name='Luminari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Beirut.ttc', name='Beirut', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar MN.ttc', name='Myanmar MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Skia.ttf', name='Skia', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOlChiki-Regular.ttf', name='Noto Sans Ol Chiki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Tarikh.ttc', name='Al Tarikh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu MN.ttc', name='Telugu MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabic.ttf', name='.SF Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGothic-Regular.ttf', name='Noto Sans Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCuneiform-Regular.ttf', name='Noto Sans Cuneiform', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/KufiStandardGK.ttc', name='KufiStandardGK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Muna.ttc', name='Muna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymBol.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farah.ttc', name='Farah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiViet-Regular.ttf', name='Noto Sans Tai Viet', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBol.otf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GujaratiMT.ttc', name='Gujarati MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Rounded Bold.ttf', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmBol.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSItalic.ttf', name='System Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baghdad.ttc', name='Baghdad', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Copperplate.ttc', name='Copperplate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSamaritan-Regular.ttf', name='Noto Sans Samaritan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72.ttc', name='Bodoni 72', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldHungarian-Regular.ttf', name='Noto Sans Old Hungarian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Marion.ttc', name='Marion', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Charter.ttc', name='Charter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLimbu-Regular.ttf', name='Noto Sans Limbu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sathu.ttf', name='Sathu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNabataean-Regular.ttf', name='Noto Sans Nabataean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleGothic.ttf', name='AppleGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W9.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Krungthep.ttf', name='Krungthep', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NewYork.ttf', name='.New York', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsmanya-Regular.ttf', name='Noto Sans Osmanya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Devanagari Sangam MN.ttc', name='Devanagari Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Silom.ttf', name='Silom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAdlam-Regular.ttf', name='Noto Sans Adlam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactRounded.ttf', name='.SF Compact Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBhaiksuki-Regular.ttf', name='Noto Sans Bhaiksuki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala MN.ttc', name='Sinhala MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi Sangam MN.ttc', name='Gurmukhi Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPalmyrene-Regular.ttf', name='Noto Sans Palmyrene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Iowan Old Style.ttc', name='Iowan Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi.ttf', name='Mishafi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/AquaKana.ttc', name='.Aqua Kana', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kokonor.ttf', name='Kokonor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNS.ttf', name='System Font', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVar.otf', name='STIXVariants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalPahlavi-Regular.ttf', name='Noto Sans Inscriptional Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDReg.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Library/Fonts/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Didot.ttc', name='Didot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewa-Regular.ttf', name='Noto Sans Newa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifBalinese-Regular.ttf', name='Noto Serif Balinese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W3.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 OS.ttc', name='Bodoni 72 Oldstyle', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansVai-Regular.ttf', name='Noto Sans Vai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text Ornaments.ttf', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBrahmi-Regular.ttf', name='Noto Sans Brahmi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Songti.ttc', name='Songti SC', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMultani-Regular.ttf', name='Noto Sans Multani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/MarkerFelt.ttc', name='Marker Felt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldNorthArabian-Regular.ttf', name='Noto Sans Old North Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/BigCaslon.ttf', name='Big Caslon', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsage-Regular.ttf', name='Noto Sans Osage', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeroitic-Regular.ttf', name='Noto Sans Meroitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 3.ttf', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBolIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam Sangam MN.ttc', name='Malayalam Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldItalic-Regular.ttf', name='Noto Sans Old Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PartyLET-plain.ttf', name='Party LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala Sangam MN.ttc', name='Sinhala Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Academy Engraved LET Fonts.ttf', name='Academy Engraved LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada MN.ttc', name='Kannada MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Savoye LET.ttc', name='Savoye LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Papyrus.ttc', name='Papyrus', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Rockwell.ttc', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmBol.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ZapfDingbats.ttf', name='Zapf Dingbats', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Helvetica.ttc', name='Helvetica', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.322727272727273
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Ayuthaya.ttf', name='Ayuthaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiTham-Regular.ttf', name='Noto Sans Tai Tham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ丸ゴ ProN W4.ttc', name='Hiragino Maru Gothic Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleMyungjo.ttf', name='AppleMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMasaramGondi-Regular.otf', name='Noto Sans Masaram Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearA-Regular.ttf', name='Noto Sans Linear A', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ明朝 ProN.ttc', name='Hiragino Mincho ProN', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSerifMyanmar.ttc', name='Noto Serif Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewTaiLue-Regular.ttf', name='Noto Sans New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Zapfino.ttf', name='Zapfino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDBol.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Andale Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla Sangam MN.ttc', name='Bangla Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kailasa.ttc', name='Kailasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Thonburi.ttc', name='Thonburi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansOriya.ttc', name='Noto Sans Oriya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhoenician-Regular.ttf', name='Noto Sans Phoenician', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalParthian-Regular.ttf', name='Noto Sans Inscriptional Parthian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSundanese-Regular.ttf', name='Noto Sans Sundanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMahajani-Regular.ttf', name='Noto Sans Mahajani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMono.ttf', name='.SF NS Mono', style='normal', variant='normal', weight=295, stretch='normal', size='scalable')) = 10.14975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerif.ttc', name='PT Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSans.ttc', name='PT Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SuperClarendon.ttc', name='Superclarendon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGlagolitic-Regular.ttf', name='Noto Sans Glagolitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Brush Script.ttf', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTMono.ttc', name='PT Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagalog-Regular.ttf', name='Noto Sans Tagalog', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHatran-Regular.ttf', name='Noto Sans Hatran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldSouthArabian-Regular.ttf', name='Noto Sans Old South Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCoptic-Regular.ttf', name='Noto Sans Coptic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSRounded.ttf', name='.SF NS Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiLe-Regular.ttf', name='Noto Sans Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NewYorkItalic.ttf', name='.New York', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansChakma-Regular.ttf', name='Noto Sans Chakma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Apple Chancery.ttf', name='Apple Chancery', style='normal', variant='normal', weight=0, stretch='normal', size='scalable')) = 10.43
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPermic-Regular.ttf', name='Noto Sans Old Permic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorBangla.ttc', name='Kohinoor Bangla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/MuktaMahee.ttc', name='Mukta Mahee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold.ttf', name='Arial Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRejang-Regular.ttf', name='Noto Sans Rejang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuhid-Regular.ttf', name='Noto Sans Buhid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Times.ttc', name='Times', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gujarati Sangam MN.ttc', name='Gujarati Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Nadeem.ttc', name='Nadeem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDBol.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralItalic.otf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Raanana.ttc', name='Raanana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi Gold.ttf', name='Mishafi Gold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkboard.ttc', name='Chalkboard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKayahLi-Regular.ttf', name='Noto Sans Kayah Li', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearB-Regular.ttf', name='Noto Sans Linear B', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil Sangam MN.ttc', name='Tamil Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next Condensed.ttc', name='Avenir Next Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymReg.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansEgyptianHieroglyphs-Regular.ttf', name='Noto Sans Egyptian Hieroglyphs', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GillSans.ttc', name='Gill Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorTelugu.ttc', name='Kohinoor Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhagsPa-Regular.ttf', name='Noto Sans PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompact.ttf', name='.SF Compact', style='normal', variant='normal', weight=1000, stretch='normal', size='scalable')) = 10.62
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu Sangam MN.ttc', name='Telugu Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/PingFang.ttc', name='PingFang HK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next.ttc', name='Avenir Next', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farisi.ttf', name='Farisi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneral.otf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni Ornaments.ttf', name='Bodoni Ornaments', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Seravek.ttc', name='Seravek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSyriac-Regular.ttf', name='Noto Sans Syriac', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AmericanTypewriter.ttc', name='American Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya Sangam MN.ttc', name='Oriya Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDReg.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSaurashtra-Regular.ttf', name='Noto Sans Saurashtra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 2.ttf', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMarchen-Regular.ttf', name='Noto Sans Marchen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBolIta.otf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ChalkboardSE.ttc', name='Chalkboard SE', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFiveSymReg.otf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ArialHB.ttc', name='Arial Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Cochin.ttc', name='Cochin', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Damascus.ttc', name='Damascus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text.ttc', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DecoTypeNaskh.ttc', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao MN.ttc', name='Lao MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AlBayan.ttc', name='Al Bayan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/GeezaPro.ttc', name='Geeza Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWarangCiti-Regular.ttf', name='Noto Sans Warang Citi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W4.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sana.ttc', name='Sana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Thuluth.ttf', name='Diwan Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Medium.ttc', name='Heiti TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymBol.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTirhuta-Regular.ttf', name='Noto Sans Tirhuta', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar Sangam MN.ttc', name='Myanmar Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAvestan-Regular.ttf', name='Noto Sans Avestan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W5.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansManichaean-Regular.ttf', name='Noto Sans Manichaean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifYezidi-Regular.otf', name='Noto Serif Yezidi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Herculanum.ttf', name='Herculanum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Courier.ttc', name='Courier', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Galvji.ttc', name='Galvji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/InaiMathi-MN.ttc', name='InaiMathi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhudawadi-Regular.ttf', name='Noto Sans Khudawadi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ITFDevanagari.ttc', name='ITF Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Black.ttf', name='Arial Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMro-Regular.ttf', name='Noto Sans Mro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Kufi.ttc', name='Diwan Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansArmenian.ttc', name='Noto Sans Armenian', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Futura.ttc', name='Futura', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansYi-Regular.ttf', name='Noto Sans Yi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya MN.ttc', name='Oriya MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Noteworthy.ttc', name='Noteworthy', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansDuployan-Regular.ttf', name='Noto Sans Duployan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmReg.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpReg.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/HelveticaNeue.ttc', name='Helvetica Neue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kefa.ttc', name='Kefa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansThaana-Regular.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansJavanese-Regular.otf', name='Noto Sans Javanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanifiRohingya-Regular.ttf', name='Noto Sans Hanifi Rohingya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi MN.ttc', name='Gurmukhi MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NewPeninimMT.ttc', name='New Peninim MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Waseem.ttc', name='Waseem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W2.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWancho-Regular.ttf', name='Noto Sans Wancho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldTurkic-Regular.ttf', name='Noto Sans Old Turkic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SignPainter.ttc', name='SignPainter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 Smallcaps Book.ttf', name='Bodoni 72 Smallcaps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Menlo.ttc', name='Menlo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansModi-Regular.ttf', name='Noto Sans Modi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Symbols.ttf', name='Apple Symbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansMyanmar.ttc', name='Noto Sans Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil MN.ttc', name='Tamil MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPsalterPahlavi-Regular.ttf', name='Noto Sans Psalter Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Optima.ttc', name='Optima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoNastaliq.ttc', name='Noto Nastaliq Urdu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVarBol.otf', name='STIXVariants', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/AppleSDGothicNeo.ttc', name='Apple SD Gothic Neo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/LucidaGrande.ttc', name='Lucida Grande', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 2.872272727272727
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer MN.ttc', name='Khmer MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Shree714.ttc', name='Shree Devanagari 714', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma Bold.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Phosphate.ttc', name='Phosphate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W6.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkduster.ttf', name='Chalkduster', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMonoItalic.ttf', name='.SF NS Mono', style='italic', variant='normal', weight=295, stretch='normal', size='scalable')) = 11.14975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMandaic-Regular.ttf', name='Noto Sans Mandaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeeteiMayek-Regular.ttf', name='Noto Sans Meetei Mayek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada Sangam MN.ttc', name='Kannada Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PlantagenetCherokee.ttf', name='Plantagenet Cherokee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhojki-Regular.ttf', name='Noto Sans Khojki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Hiragino Sans GB.ttc', name='Hiragino Sans GB', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Palatino.ttc', name='Palatino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSylotiNagri-Regular.ttf', name='Noto Sans Syloti Nagri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymBol.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSoraSompeng-Regular.ttf', name='Noto Sans Sora Sompeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMendeKikakui-Regular.ttf', name='Noto Sans Mende Kikakui', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansKannada.ttc', name='Noto Sans Kannada', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Alternate Bold.ttf', name='DIN Alternate', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorGujarati.ttc', name='Kohinoor Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Nile.ttc', name='Al Nile', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKaithi-Regular.ttf', name='Noto Sans Kaithi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGunjalaGondi-Regular.otf', name='Noto Sans Gunjala Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLepcha-Regular.ttf', name='Noto Sans Lepcha', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCypriot-Regular.ttf', name='Noto Sans Cypriot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W7.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W8.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpBol.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactItalic.ttf', name='.SF Compact', style='italic', variant='normal', weight=1000, stretch='normal', size='scalable')) = 11.62
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTakri-Regular.ttf', name='Noto Sans Takri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam MN.ttc', name='Malayalam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DevanagariMT.ttc', name='Devanagari MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPahawhHmong-Regular.ttf', name='Noto Sans Pahawh Hmong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPauCinHau-Regular.ttf', name='Noto Sans Pau Cin Hau', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymReg.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mshtakan.ttc', name='Mshtakan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymBol.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagbanwa-Regular.ttf', name='Noto Sans Tagbanwa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBamum-Regular.ttf', name='Noto Sans Bamum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Condensed Bold.ttf', name='DIN Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao Sangam MN.ttf', name='Lao Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W1.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansUgaritic-Regular.ttf', name='Noto Sans Ugaritic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNKo-Regular.ttf', name='Noto Sans NKo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trattatello.ttf', name='Trattatello', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W0.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir.ttc', name='Avenir', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Athelas.ttc', name='Athelas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Corsiva.ttc', name='Corsiva Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUni.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPersian-Regular.ttf', name='Noto Sans Old Persian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerifCaption.ttc', name='PT Serif Caption', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Geneva.ttf', name='Geneva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.595454545454545
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSharada-Regular.ttf', name='Noto Sans Sharada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansElbasan-Regular.ttf', name='Noto Sans Elbasan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansImperialAramaic-Regular.ttf', name='Noto Sans Imperial Aramaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBatak-Regular.ttf', name='Noto Sans Batak', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBol.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Monaco.ttf', name='Monaco', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLydian-Regular.ttf', name='Noto Sans Lydian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMiao-Regular.ttf', name='Noto Sans Miao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi.ttf', name='Gurmukhi MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCaucasianAlbanian-Regular.ttf', name='Noto Sans Caucasian Albanian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifAhom-Regular.ttf', name='Noto Serif Ahom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuginese-Regular.ttf', name='Noto Sans Buginese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCham-Regular.ttf', name='Noto Sans Cham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla MN.ttc', name='Bangla MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymReg.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SukhumvitSet.ttc', name='Sukhumvit Set', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Light.ttc', name='Heiti TC', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSiddham-Regular.ttf', name='Noto Sans Siddham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow.ttf', name='Arial Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKharoshthi-Regular.ttf', name='Noto Sans Kharoshthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Keyboard.ttf', name='.Keyboard', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/EuphemiaCAS.ttc', name='Euphemia UCAS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanunoo-Regular.ttf', name='Noto Sans Hanunoo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmReg.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baskerville.ttc', name='Baskerville', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Microsoft Sans Serif.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bradley Hand Bold.ttf', name='Bradley Hand', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMongolian-Regular.ttf', name='Noto Sans Mongolian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBassaVah-Regular.ttf', name='Noto Sans Bassa Vah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLycian-Regular.ttf', name='Noto Sans Lycian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Kohinoor.ttc', name='Kohinoor Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SnellRoundhand.ttc', name='Snell Roundhand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer Sangam MN.ttf', name='Khmer Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCarian-Regular.ttf', name='Noto Sans Carian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTifinagh-Regular.ttf', name='Noto Sans Tifinagh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymReg.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Luminari.ttf', name='Luminari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Beirut.ttc', name='Beirut', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar MN.ttc', name='Myanmar MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Skia.ttf', name='Skia', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOlChiki-Regular.ttf', name='Noto Sans Ol Chiki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Tarikh.ttc', name='Al Tarikh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu MN.ttc', name='Telugu MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabic.ttf', name='.SF Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGothic-Regular.ttf', name='Noto Sans Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCuneiform-Regular.ttf', name='Noto Sans Cuneiform', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/KufiStandardGK.ttc', name='KufiStandardGK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Muna.ttc', name='Muna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymBol.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farah.ttc', name='Farah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiViet-Regular.ttf', name='Noto Sans Tai Viet', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBol.otf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GujaratiMT.ttc', name='Gujarati MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Rounded Bold.ttf', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmBol.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSItalic.ttf', name='System Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baghdad.ttc', name='Baghdad', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Copperplate.ttc', name='Copperplate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSamaritan-Regular.ttf', name='Noto Sans Samaritan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72.ttc', name='Bodoni 72', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldHungarian-Regular.ttf', name='Noto Sans Old Hungarian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Marion.ttc', name='Marion', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Charter.ttc', name='Charter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLimbu-Regular.ttf', name='Noto Sans Limbu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sathu.ttf', name='Sathu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNabataean-Regular.ttf', name='Noto Sans Nabataean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleGothic.ttf', name='AppleGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W9.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Krungthep.ttf', name='Krungthep', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NewYork.ttf', name='.New York', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsmanya-Regular.ttf', name='Noto Sans Osmanya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Devanagari Sangam MN.ttc', name='Devanagari Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Silom.ttf', name='Silom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAdlam-Regular.ttf', name='Noto Sans Adlam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactRounded.ttf', name='.SF Compact Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBhaiksuki-Regular.ttf', name='Noto Sans Bhaiksuki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala MN.ttc', name='Sinhala MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi Sangam MN.ttc', name='Gurmukhi Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPalmyrene-Regular.ttf', name='Noto Sans Palmyrene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Iowan Old Style.ttc', name='Iowan Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi.ttf', name='Mishafi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/AquaKana.ttc', name='.Aqua Kana', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kokonor.ttf', name='Kokonor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNS.ttf', name='System Font', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVar.otf', name='STIXVariants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalPahlavi-Regular.ttf', name='Noto Sans Inscriptional Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDReg.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Library/Fonts/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Didot.ttc', name='Didot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewa-Regular.ttf', name='Noto Sans Newa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifBalinese-Regular.ttf', name='Noto Serif Balinese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W3.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 OS.ttc', name='Bodoni 72 Oldstyle', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansVai-Regular.ttf', name='Noto Sans Vai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text Ornaments.ttf', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBrahmi-Regular.ttf', name='Noto Sans Brahmi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Songti.ttc', name='Songti SC', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMultani-Regular.ttf', name='Noto Sans Multani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/MarkerFelt.ttc', name='Marker Felt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldNorthArabian-Regular.ttf', name='Noto Sans Old North Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/BigCaslon.ttf', name='Big Caslon', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsage-Regular.ttf', name='Noto Sans Osage', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeroitic-Regular.ttf', name='Noto Sans Meroitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 3.ttf', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBolIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam Sangam MN.ttc', name='Malayalam Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldItalic-Regular.ttf', name='Noto Sans Old Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PartyLET-plain.ttf', name='Party LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala Sangam MN.ttc', name='Sinhala Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Academy Engraved LET Fonts.ttf', name='Academy Engraved LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada MN.ttc', name='Kannada MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Savoye LET.ttc', name='Savoye LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Papyrus.ttc', name='Papyrus', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Rockwell.ttc', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmBol.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ZapfDingbats.ttf', name='Zapf Dingbats', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Helvetica.ttc', name='Helvetica', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.322727272727273
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Ayuthaya.ttf', name='Ayuthaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiTham-Regular.ttf', name='Noto Sans Tai Tham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ丸ゴ ProN W4.ttc', name='Hiragino Maru Gothic Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleMyungjo.ttf', name='AppleMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMasaramGondi-Regular.otf', name='Noto Sans Masaram Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearA-Regular.ttf', name='Noto Sans Linear A', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ明朝 ProN.ttc', name='Hiragino Mincho ProN', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSerifMyanmar.ttc', name='Noto Serif Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewTaiLue-Regular.ttf', name='Noto Sans New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Zapfino.ttf', name='Zapfino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDBol.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Andale Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla Sangam MN.ttc', name='Bangla Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kailasa.ttc', name='Kailasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Thonburi.ttc', name='Thonburi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansOriya.ttc', name='Noto Sans Oriya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhoenician-Regular.ttf', name='Noto Sans Phoenician', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:root:ics_tab.py: fill_celltype_combobox(): ['default']
DEBUG:root:ics_tab.py: fill_celltype_combobox(): ['default']
DEBUG:root:studio.py: calling vis_tab.substrates_cbox_changed_cb(2)
DEBUG:root:
studio.py: open_as_cb():  full_path_model_name =/Users/macklinp/GitHub/PhysiCell/config/PhysiCell_settings.xml
DEBUG:root:     filePath is valid
DEBUG:root:     len(full_path_model_name) = 62
DEBUG:root:studio: show_sample_model(): self.config_file = /Users/macklinp/GitHub/PhysiCell/config/PhysiCell_settings.xml
DEBUG:root:=======================  microenv populate_tree  ======================= 
DEBUG:root:dc_ic_units =  mmHg
DEBUG:root:dc_bc_units = mmHg
DEBUG:root:bv = <Element 'boundary_value' at 0x16c641cc0>
DEBUG:root:   -------- substrate:  dirichlet_xmin = 0
DEBUG:root:bv = <Element 'boundary_value' at 0x16c641d60>
DEBUG:root:bv = <Element 'boundary_value' at 0x16c641e00>
DEBUG:root:bv = <Element 'boundary_value' at 0x16c641ea0>
DEBUG:root:bv = <Element 'boundary_value' at 0x16c641f40>
DEBUG:root:bv = <Element 'boundary_value' at 0x16c643040>
DEBUG:root:------- options: <Element 'calculate_gradients' at 0x16c643130>
DEBUG:root:------- options: <Element 'track_internalized_substrates_in_each_agent' at 0x16c6431d0>
DEBUG:root:------- options: <Element 'initial_condition' at 0x16c643220>
DEBUG:root:------- options: <Element 'dirichlet_nodes' at 0x16c643360>
DEBUG:root:

=======================  leaving microenv populate_tree  =====================
DEBUG:root:cell_def_tab.py: ------- fill_substrates_comboboxes
DEBUG:root:------ motility_substrate_changed_cb(): idx = -1
DEBUG:root:       motility_substrate_changed_cb(): self.current_cell_def = None
DEBUG:root:------ motility2_substrate_changed_cb(): idx = -1
DEBUG:root:   text (subname) = 
DEBUG:root:   subname is empty, return!
DEBUG:root: --> substrate
DEBUG:root:------ motility_substrate_changed_cb(): idx = 0
DEBUG:root:       motility_substrate_changed_cb(): self.current_cell_def = None
DEBUG:root:------ motility2_substrate_changed_cb(): idx = 0
DEBUG:root:   text (subname) = substrate
DEBUG:root:=======================  populate_tree_cell_defs(): ======================= 
DEBUG:root:    cell_def_tab.param_d = {}
DEBUG:root:

=======================  validate_cell_defs(): ======================= 
DEBUG:root:Checking malignant epithelial cell
DEBUG:root:=======================  end validate_cell_defs(): =======================


DEBUG:root:----- cell_def.tag= cell_definition
DEBUG:root:
--------new_interaction_params(): cdname_new= malignant epithelial cell
DEBUG:root:
--------new_intracellular_params(): cdname_new= malignant epithelial cell
DEBUG:root:------- new_custom_data_params() -----
DEBUG:root:
===== populate_tree():  cycle
DEBUG:root: >> cycle_path= .//cell_definition[1]//phenotype//cycle
DEBUG:root:   cycle code= 6
DEBUG:root: >> phase_transition_path 
DEBUG:root:<Element 'rate' at 0x16c643810>
DEBUG:root:<Element 'rate' at 0x16c6438b0>
DEBUG:root:<Element 'rate' at 0x16c643950>
DEBUG:root:<Element 'rate' at 0x16c6439f0>
DEBUG:root: >> phase_durations_path =.//cell_definition[1]//phenotype//cycle//phase_durations
DEBUG:root: >> pd_uep =None
DEBUG:root:
===== populate_tree():  death
DEBUG:root:death_uep=<Element 'death' at 0x16c643b30>
DEBUG:root:-------- parsing apoptosis!
DEBUG:root: >> pd_uep =<Element 'phase_durations' at 0x16c643d10>
DEBUG:root:phase_duration= <Element 'duration' at 0x16c643db0>
DEBUG:root:index= 0
DEBUG:root:-------- parsing necrosis!
DEBUG:root: >> pd_uep =<Element 'phase_durations' at 0x16c648720>
DEBUG:root:<Element 'duration' at 0x16c6487c0>
DEBUG:root:index= 0
DEBUG:root:<Element 'duration' at 0x16c648860>
DEBUG:root:index= 1
DEBUG:root:volume_path=.//cell_definition[1]//phenotype//volume//
DEBUG:root:
===== populate_tree():  mechanics
DEBUG:root:mechanics_path=.//cell_definition[1]//phenotype//mechanics//
DEBUG:root:---- cell_interactions_path= .//cell_definition[1]//phenotype//mechanics//cell_adhesion_affinities
DEBUG:root:---- found cell_adhesion_affinities_path:
DEBUG:root:--> {'malignant epithelial cell': '1'}
DEBUG:root:
===== populate_tree():  motility
DEBUG:root:motility_path=.//cell_definition[1]//phenotype//motility//
DEBUG:root:
----------- populate_tree_cell_defs.py: cell_def_name= malignant epithelial cell,  cell_def_tab.param_d[cell_def_name]["motility_chemotaxis_substrate"] = substrate
DEBUG:root:motility_advanced_chemotaxis_path= .//cell_definition[1]//phenotype//motility//options//advanced_chemotaxis//
DEBUG:root:chemotactic_sensitivity= {'substrate': '0.0'}
DEBUG:root:sensitivity_path= .//cell_definition[1]//phenotype//motility//options//advanced_chemotaxis//chemotactic_sensitivities
DEBUG:root:---- found chemotactic_sensitivities: <Element 'chemotactic_sensitivities' at 0x16c64fe00>
DEBUG:root:subelm=<Element 'chemotactic_sensitivity' at 0x16c64fea0>
DEBUG:root: chemotactic_sensitivity--> substrate = 0.0
DEBUG:root:{'substrate': '0.0'}
DEBUG:root:------ motility2_substrate_changed_cb(): idx = 0
DEBUG:root:   text (subname) = substrate
DEBUG:root:    motility_advanced_chemotaxis_substrate= substrate
DEBUG:root:   chemotactic_sensitivity = {'substrate': '0.0'}
DEBUG:root:
===== populate_tree():  secretion
DEBUG:root:secretion_path = .//cell_definition[1]//phenotype//secretion//
DEBUG:root:uep_secretion = <Element 'secretion' at 0x16c6520e0>
DEBUG:root:0) -- secretion substrate = substrate
DEBUG:root:------ done parsing secretion:
DEBUG:root:
===== populate_tree():  cell_interactions
DEBUG:root:---- cell_interactions_path= .//cell_definition[1]//phenotype//cell_interactions
DEBUG:root:---- found cell_interactions:
DEBUG:root:uep2= <Element 'live_phagocytosis_rates' at 0x16c652860>
DEBUG:root: live_phagocytosis_rate= {'malignant epithelial cell': '0'}
DEBUG:root: attack_rate= {'malignant epithelial cell': '0'}
DEBUG:root: fusion_rate= {'malignant epithelial cell': '0'}
DEBUG:root:------ done parsing cell_interactions:
DEBUG:root:---- transformation_rates_path = .//cell_definition[1]//phenotype//cell_transformations//transformation_rates
DEBUG:root: transformation_rate= {'malignant epithelial cell': '0'}
DEBUG:root:------ done parsing cell_transformations:
DEBUG:root:
===== populate_tree():  molecular
DEBUG:root:
===== populate_tree():  intracellular
DEBUG:root:------ done parsing intracellular:
DEBUG:root:
===== populate_tree():  custom data
DEBUG:root:uep_custom_data= <Element 'custom_data' at 0x16c655310>
DEBUG:root:--------------- populate_tree: (empty)custom_data = {}
DEBUG:root:var.attrib.keys() = dict_keys(['conserved', 'units', 'description'])
DEBUG:root:populate: cell_def_name= malignant epithelial cell --> custom_data: {'sample': ['1.0', False]}
DEBUG:root:
----- update_motility_params():  cdname= malignant epithelial cell
DEBUG:root:     setting motility_substrate_dropdown (for cdname= malignant epithelial cell ) = substrate
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= malignant epithelial cell ) = substrate
DEBUG:root:    chemotactic_sensitivity= {'substrate': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = malignant epithelial cell
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = substrate
DEBUG:root:{'substrate': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '0', 'net_export_rate': '0'}}
DEBUG:root:cell_def_tab.py: ------- fill_celltypes_comboboxes
DEBUG:root:ics_tab.py: fill_celltype_combobox(): ['malignant epithelial cell']
DEBUG:root:

------------  user_params_tab: fill_gui --------------
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['oxygen']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 1
DEBUG:root:cdefs_in_tree =['malignant epithelial cell']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen']
DEBUG:root:substrate = oxygen
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['oxygen']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 1
DEBUG:root:cdefs_in_tree =['malignant epithelial cell']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen']
DEBUG:root:substrate = oxygen
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['oxygen']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 1
DEBUG:root:cdefs_in_tree =['malignant epithelial cell']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen']
DEBUG:root:substrate = oxygen
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['oxygen']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 1
DEBUG:root:cdefs_in_tree =['malignant epithelial cell']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen']
DEBUG:root:substrate = oxygen
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:
studio.py: open_as_cb():  full_path_model_name =/Users/macklinp/GitHub/PhysiCell/config/PhysiCell_settings.xml
DEBUG:root:     filePath is valid
DEBUG:root:     len(full_path_model_name) = 62
DEBUG:root:studio: show_sample_model(): self.config_file = /Users/macklinp/GitHub/PhysiCell/config/PhysiCell_settings.xml
DEBUG:root:=======================  microenv populate_tree  ======================= 
DEBUG:root:dc_ic_units =  mmHg
DEBUG:root:dc_bc_units = mmHg
DEBUG:root:bv = <Element 'boundary_value' at 0x16c6419a0>
DEBUG:root:   -------- oxygen:  dirichlet_xmin = 38
DEBUG:root:bv = <Element 'boundary_value' at 0x16c641f40>
DEBUG:root:bv = <Element 'boundary_value' at 0x16c641c20>
DEBUG:root:bv = <Element 'boundary_value' at 0x16c6416d0>
DEBUG:root:bv = <Element 'boundary_value' at 0x16c641d60>
DEBUG:root:bv = <Element 'boundary_value' at 0x15750e720>
DEBUG:root:------- options: <Element 'calculate_gradients' at 0x15750ee50>
DEBUG:root:------- options: <Element 'track_internalized_substrates_in_each_agent' at 0x15750ec20>
DEBUG:root:------- options: <Element 'initial_condition' at 0x15750e1d0>
DEBUG:root:------- options: <Element 'dirichlet_nodes' at 0x15750e360>
DEBUG:root:

=======================  leaving microenv populate_tree  =====================
DEBUG:root:cell_def_tab.py: ------- fill_substrates_comboboxes
DEBUG:root:------ motility_substrate_changed_cb(): idx = -1
DEBUG:root:       motility_substrate_changed_cb(): self.current_cell_def = None
DEBUG:root:------ motility2_substrate_changed_cb(): idx = -1
DEBUG:root:   text (subname) = 
DEBUG:root:   subname is empty, return!
DEBUG:root: --> oxygen
DEBUG:root:------ motility_substrate_changed_cb(): idx = 0
DEBUG:root:       motility_substrate_changed_cb(): self.current_cell_def = None
DEBUG:root:------ motility2_substrate_changed_cb(): idx = 0
DEBUG:root:   text (subname) = oxygen
DEBUG:root:=======================  populate_tree_cell_defs(): ======================= 
DEBUG:root:    cell_def_tab.param_d = {}
DEBUG:root:

=======================  validate_cell_defs(): ======================= 
DEBUG:root:Checking malignant epithelial cell
DEBUG:root:=======================  end validate_cell_defs(): =======================


DEBUG:root:----- cell_def.tag= cell_definition
DEBUG:root:
--------new_interaction_params(): cdname_new= malignant epithelial cell
DEBUG:root:
--------new_intracellular_params(): cdname_new= malignant epithelial cell
DEBUG:root:------- new_custom_data_params() -----
DEBUG:root:
===== populate_tree():  cycle
DEBUG:root: >> cycle_path= .//cell_definition[1]//phenotype//cycle
DEBUG:root:   cycle code= 6
DEBUG:root: >> phase_transition_path 
DEBUG:root:<Element 'rate' at 0x15750e770>
DEBUG:root:<Element 'rate' at 0x15750e6d0>
DEBUG:root:<Element 'rate' at 0x15750e4f0>
DEBUG:root:<Element 'rate' at 0x15750ef90>
DEBUG:root: >> phase_durations_path =.//cell_definition[1]//phenotype//cycle//phase_durations
DEBUG:root: >> pd_uep =None
DEBUG:root:
===== populate_tree():  death
DEBUG:root:death_uep=<Element 'death' at 0x15750e310>
DEBUG:root:-------- parsing apoptosis!
DEBUG:root: >> pd_uep =<Element 'phase_durations' at 0x16c64c220>
DEBUG:root:phase_duration= <Element 'duration' at 0x16c64c9f0>
DEBUG:root:index= 0
DEBUG:root:-------- parsing necrosis!
DEBUG:root: >> pd_uep =<Element 'phase_durations' at 0x16c64cdb0>
DEBUG:root:<Element 'duration' at 0x16c64c950>
DEBUG:root:index= 0
DEBUG:root:<Element 'duration' at 0x16c64c130>
DEBUG:root:index= 1
DEBUG:root:volume_path=.//cell_definition[1]//phenotype//volume//
DEBUG:root:
===== populate_tree():  mechanics
DEBUG:root:mechanics_path=.//cell_definition[1]//phenotype//mechanics//
DEBUG:root:---- cell_interactions_path= .//cell_definition[1]//phenotype//mechanics//cell_adhesion_affinities
DEBUG:root:---- found cell_adhesion_affinities_path:
DEBUG:root:--> {'malignant epithelial cell': '1'}
DEBUG:root:
===== populate_tree():  motility
DEBUG:root:motility_path=.//cell_definition[1]//phenotype//motility//
DEBUG:root:
----------- populate_tree_cell_defs.py: cell_def_name= malignant epithelial cell,  cell_def_tab.param_d[cell_def_name]["motility_chemotaxis_substrate"] = oxygen
DEBUG:root:motility_advanced_chemotaxis_path= .//cell_definition[1]//phenotype//motility//options//advanced_chemotaxis//
DEBUG:root:chemotactic_sensitivity= {'oxygen': '0.0'}
DEBUG:root:sensitivity_path= .//cell_definition[1]//phenotype//motility//options//advanced_chemotaxis//chemotactic_sensitivities
DEBUG:root:---- found chemotactic_sensitivities: <Element 'chemotactic_sensitivities' at 0x16c655f40>
DEBUG:root:subelm=<Element 'chemotactic_sensitivity' at 0x16c658040>
DEBUG:root: chemotactic_sensitivity--> oxygen = 0.0
DEBUG:root:{'oxygen': '0.0'}
DEBUG:root:------ motility2_substrate_changed_cb(): idx = 0
DEBUG:root:   text (subname) = oxygen
DEBUG:root:    motility_advanced_chemotaxis_substrate= oxygen
DEBUG:root:   chemotactic_sensitivity = {'oxygen': '0.0'}
DEBUG:root:
===== populate_tree():  secretion
DEBUG:root:secretion_path = .//cell_definition[1]//phenotype//secretion//
DEBUG:root:uep_secretion = <Element 'secretion' at 0x16c658220>
DEBUG:root:0) -- secretion substrate = oxygen
DEBUG:root:------ done parsing secretion:
DEBUG:root:
===== populate_tree():  cell_interactions
DEBUG:root:---- cell_interactions_path= .//cell_definition[1]//phenotype//cell_interactions
DEBUG:root:---- found cell_interactions:
DEBUG:root:uep2= <Element 'live_phagocytosis_rates' at 0x16c6589a0>
DEBUG:root: live_phagocytosis_rate= {'malignant epithelial cell': '0'}
DEBUG:root: attack_rate= {'malignant epithelial cell': '0'}
DEBUG:root: fusion_rate= {'malignant epithelial cell': '0'}
DEBUG:root:------ done parsing cell_interactions:
DEBUG:root:---- transformation_rates_path = .//cell_definition[1]//phenotype//cell_transformations//transformation_rates
DEBUG:root: transformation_rate= {'malignant epithelial cell': '0'}
DEBUG:root:------ done parsing cell_transformations:
DEBUG:root:
===== populate_tree():  molecular
DEBUG:root:
===== populate_tree():  intracellular
DEBUG:root:------ done parsing intracellular:
DEBUG:root:
===== populate_tree():  custom data
DEBUG:root:uep_custom_data= <Element 'custom_data' at 0x16c65b450>
DEBUG:root:--------------- populate_tree: (empty)custom_data = {}
DEBUG:root:var.attrib.keys() = dict_keys(['conserved', 'units', 'description'])
DEBUG:root:populate: cell_def_name= malignant epithelial cell --> custom_data: {'sample': ['1.0', False]}
DEBUG:root:
----- update_motility_params():  cdname= malignant epithelial cell
DEBUG:root:     setting motility_substrate_dropdown (for cdname= malignant epithelial cell ) = oxygen
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= malignant epithelial cell ) = oxygen
DEBUG:root:    chemotactic_sensitivity= {'oxygen': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = malignant epithelial cell
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = oxygen
DEBUG:root:{'oxygen': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '0', 'net_export_rate': '0'}}
DEBUG:root:cell_def_tab.py: ------- fill_celltypes_comboboxes
DEBUG:root:ics_tab.py: fill_celltype_combobox(): ['malignant epithelial cell']
DEBUG:root:

------------  user_params_tab: fill_gui --------------
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 1
DEBUG:root:cdefs_in_tree =['malignant epithelial cell']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 1
DEBUG:root:cdefs_in_tree =['malignant epithelial cell']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 1
DEBUG:root:cdefs_in_tree =['malignant epithelial cell']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:key 0= malignant epithelial cell
DEBUG:root:keys 1= dict_keys(['malignant epithelial cell'])
DEBUG:root:keys 2= dict_keys(['malignant epithelial cell', ''])
DEBUG:root:
----- update_motility_params():  cdname= malignant epithelial cell
DEBUG:root:     setting motility_substrate_dropdown (for cdname= malignant epithelial cell ) = oxygen
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= malignant epithelial cell ) = oxygen
DEBUG:root:    chemotactic_sensitivity= {'oxygen': '0.0', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = malignant epithelial cell
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = oxygen
DEBUG:root:{'oxygen': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '0', 'net_export_rate': '0'}, 'apoptotic debris': {'secretion_rate': '0.0', 'secretion_target': '0.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}, 'necrotic debris': {'secretion_rate': '0.0', 'secretion_target': '0.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}}
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 1
DEBUG:root:cdefs_in_tree =['malignant epithelial cell']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 1
DEBUG:root:cdefs_in_tree =['malignant epithelial cell']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 1
DEBUG:root:cdefs_in_tree =['malignant epithelial cell']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:update_secretion_params(): cdname = malignant epithelial cell
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = apoptotic debris
DEBUG:root:{'oxygen': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '10', 'net_export_rate': '0'}, 'apoptotic debris': {'secretion_rate': '0.0', 'secretion_target': '0.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}, 'necrotic debris': {'secretion_rate': '0.0', 'secretion_target': '0.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}}
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 1
DEBUG:root:cdefs_in_tree =['malignant epithelial cell']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:update_secretion_params(): cdname = malignant epithelial cell
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = necrotic debris
DEBUG:root:{'oxygen': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '10', 'net_export_rate': '0'}, 'apoptotic debris': {'secretion_rate': '0.0', 'secretion_target': '1', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}, 'necrotic debris': {'secretion_rate': '0.0', 'secretion_target': '0.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}}
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 1
DEBUG:root:cdefs_in_tree =['malignant epithelial cell']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 1
DEBUG:root:cdefs_in_tree =['malignant epithelial cell']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 1
DEBUG:root:cdefs_in_tree =['malignant epithelial cell']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 1
DEBUG:root:cdefs_in_tree =['malignant epithelial cell']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----- chemo_sensitivity_changed() = 1
DEBUG:root:----- chemo_sensitivity_changed(): subname = oxygen
DEBUG:root:     chemotactic_sensitivity (dict)= {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 1
DEBUG:root:cdefs_in_tree =['malignant epithelial cell']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 1
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:------ motility2_substrate_changed_cb(): idx = 1
DEBUG:root:   text (subname) = apoptotic debris
DEBUG:root:    motility_advanced_chemotaxis_substrate= apoptotic debris
DEBUG:root:   chemotactic_sensitivity = {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:----- chemo_sensitivity_changed() = 0.0
DEBUG:root:----- chemo_sensitivity_changed(): subname = apoptotic debris
DEBUG:root:     chemotactic_sensitivity (dict)= {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:------ motility2_substrate_changed_cb(): idx = 2
DEBUG:root:   text (subname) = necrotic debris
DEBUG:root:    motility_advanced_chemotaxis_substrate= necrotic debris
DEBUG:root:   chemotactic_sensitivity = {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:------ motility2_substrate_changed_cb(): idx = 0
DEBUG:root:   text (subname) = oxygen
DEBUG:root:    motility_advanced_chemotaxis_substrate= oxygen
DEBUG:root:   chemotactic_sensitivity = {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:----- chemo_sensitivity_changed() = 1
DEBUG:root:----- chemo_sensitivity_changed(): subname = oxygen
DEBUG:root:     chemotactic_sensitivity (dict)= {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 1
DEBUG:root:cdefs_in_tree =['malignant epithelial cell']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 1
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 1
DEBUG:root:cdefs_in_tree =['malignant epithelial cell']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 1
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 1
DEBUG:root:cdefs_in_tree =['malignant epithelial cell']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 1
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_xmin,xmax=  (-500.0, 500.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_ymin,ymax=  (-500.0, 500.0)
DEBUG:root:ics_tab.py: volume= 2494.0, radius= 8.412710547954228
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_xmin,xmax=  (-500.0, 500.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_ymin,ymax=  (-500.0, 500.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_xmin,xmax=  (-500.0, 500.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_ymin,ymax=  (-500.0, 500.0)
DEBUG:root:ics_tab.py: volume= 2494.0, radius= 8.412710547954228
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_xmin,xmax=  (-500.0, 500.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_ymin,ymax=  (-500.0, 500.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_xmin,xmax=  (-500.0, 500.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_ymin,ymax=  (-500.0, 500.0)
DEBUG:root:ics_tab.py: volume= 2494.0, radius= 8.412710547954228
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_xmin,xmax=  (-500.0, 500.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_ymin,ymax=  (-500.0, 500.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_xmin,xmax=  (-500.0, 500.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_ymin,ymax=  (-500.0, 500.0)
DEBUG:root:ics_tab.py: volume= 2494.0, radius= 8.412710547954228
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 1
DEBUG:root:cdefs_in_tree =['malignant epithelial cell']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 1
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 1
DEBUG:root:cdefs_in_tree =['malignant epithelial cell']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 1
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:
studio.py: open_as_cb():  full_path_model_name =/Users/macklinp/GitHub/PhysiCell/config/PhysiCell_settings.xml
DEBUG:root:     filePath is valid
DEBUG:root:     len(full_path_model_name) = 62
DEBUG:root:studio: show_sample_model(): self.config_file = /Users/macklinp/GitHub/PhysiCell/config/PhysiCell_settings.xml
DEBUG:root:=======================  microenv populate_tree  ======================= 
DEBUG:root:dc_ic_units =  mmHg
DEBUG:root:dc_bc_units = mmHg
DEBUG:root:bv = <Element 'boundary_value' at 0x16c6713b0>
DEBUG:root:   -------- oxygen:  dirichlet_xmin = 38
DEBUG:root:bv = <Element 'boundary_value' at 0x16c671450>
DEBUG:root:bv = <Element 'boundary_value' at 0x16c671590>
DEBUG:root:bv = <Element 'boundary_value' at 0x16c6716d0>
DEBUG:root:bv = <Element 'boundary_value' at 0x16c671810>
DEBUG:root:bv = <Element 'boundary_value' at 0x16c6719a0>
DEBUG:root:dc_ic_units =  dimensionless
DEBUG:root:dc_bc_units = dimensionless
DEBUG:root:bv = <Element 'boundary_value' at 0x16c671720>
DEBUG:root:   -------- apoptotic debris:  dirichlet_xmin = None
DEBUG:root:bv = <Element 'boundary_value' at 0x16c671bd0>
DEBUG:root:bv = <Element 'boundary_value' at 0x16c671f40>
DEBUG:root:bv = <Element 'boundary_value' at 0x16c671d60>
DEBUG:root:bv = <Element 'boundary_value' at 0x16c6711d0>
DEBUG:root:bv = <Element 'boundary_value' at 0x16c6714a0>
DEBUG:root:dc_ic_units =  dimensionless
DEBUG:root:dc_bc_units = dimensionless
DEBUG:root:bv = <Element 'boundary_value' at 0x16c6589a0>
DEBUG:root:   -------- necrotic debris:  dirichlet_xmin = None
DEBUG:root:bv = <Element 'boundary_value' at 0x16c658720>
DEBUG:root:bv = <Element 'boundary_value' at 0x16c658d60>
DEBUG:root:bv = <Element 'boundary_value' at 0x16c6589f0>
DEBUG:root:bv = <Element 'boundary_value' at 0x16c658c20>
DEBUG:root:bv = <Element 'boundary_value' at 0x16c658180>
DEBUG:root:------- options: <Element 'calculate_gradients' at 0x16c658810>
DEBUG:root:------- options: <Element 'track_internalized_substrates_in_each_agent' at 0x16c658270>
DEBUG:root:------- options: <Element 'initial_condition' at 0x16c658590>
DEBUG:root:------- options: <Element 'dirichlet_nodes' at 0x16c658860>
DEBUG:root:

=======================  leaving microenv populate_tree  =====================
DEBUG:root:cell_def_tab.py: ------- fill_substrates_comboboxes
DEBUG:root:------ motility_substrate_changed_cb(): idx = -1
DEBUG:root:       motility_substrate_changed_cb(): self.current_cell_def = None
DEBUG:root:------ motility2_substrate_changed_cb(): idx = -1
DEBUG:root:   text (subname) = 
DEBUG:root:   subname is empty, return!
DEBUG:root: --> oxygen
DEBUG:root:------ motility_substrate_changed_cb(): idx = 0
DEBUG:root:       motility_substrate_changed_cb(): self.current_cell_def = None
DEBUG:root:------ motility2_substrate_changed_cb(): idx = 0
DEBUG:root:   text (subname) = oxygen
DEBUG:root: --> apoptotic debris
DEBUG:root: --> necrotic debris
DEBUG:root:=======================  populate_tree_cell_defs(): ======================= 
DEBUG:root:    cell_def_tab.param_d = {}
DEBUG:root:

=======================  validate_cell_defs(): ======================= 
DEBUG:root:Checking malignant epithelial cell
DEBUG:root:=======================  end validate_cell_defs(): =======================


DEBUG:root:----- cell_def.tag= cell_definition
DEBUG:root:
--------new_interaction_params(): cdname_new= malignant epithelial cell
DEBUG:root:
--------new_intracellular_params(): cdname_new= malignant epithelial cell
DEBUG:root:------- new_custom_data_params() -----
DEBUG:root:
===== populate_tree():  cycle
DEBUG:root: >> cycle_path= .//cell_definition[1]//phenotype//cycle
DEBUG:root:   cycle code= 6
DEBUG:root: >> phase_transition_path 
DEBUG:root:<Element 'rate' at 0x16c641a90>
DEBUG:root:<Element 'rate' at 0x16c6412c0>
DEBUG:root:<Element 'rate' at 0x16c641f90>
DEBUG:root:<Element 'rate' at 0x16c641680>
DEBUG:root: >> phase_durations_path =.//cell_definition[1]//phenotype//cycle//phase_durations
DEBUG:root: >> pd_uep =None
DEBUG:root:
===== populate_tree():  death
DEBUG:root:death_uep=<Element 'death' at 0x16c641400>
DEBUG:root:-------- parsing apoptosis!
DEBUG:root: >> pd_uep =<Element 'phase_durations' at 0x16c641180>
DEBUG:root:phase_duration= <Element 'duration' at 0x16c641cc0>
DEBUG:root:index= 0
DEBUG:root:-------- parsing necrosis!
DEBUG:root: >> pd_uep =<Element 'phase_durations' at 0x16c65b4a0>
DEBUG:root:<Element 'duration' at 0x16c65b9f0>
DEBUG:root:index= 0
DEBUG:root:<Element 'duration' at 0x16c65b9a0>
DEBUG:root:index= 1
DEBUG:root:volume_path=.//cell_definition[1]//phenotype//volume//
DEBUG:root:
===== populate_tree():  mechanics
DEBUG:root:mechanics_path=.//cell_definition[1]//phenotype//mechanics//
DEBUG:root:---- cell_interactions_path= .//cell_definition[1]//phenotype//mechanics//cell_adhesion_affinities
DEBUG:root:---- found cell_adhesion_affinities_path:
DEBUG:root:--> {'malignant epithelial cell': '1'}
DEBUG:root:
===== populate_tree():  motility
DEBUG:root:motility_path=.//cell_definition[1]//phenotype//motility//
DEBUG:root:
----------- populate_tree_cell_defs.py: cell_def_name= malignant epithelial cell,  cell_def_tab.param_d[cell_def_name]["motility_chemotaxis_substrate"] = oxygen
DEBUG:root:motility_advanced_chemotaxis_path= .//cell_definition[1]//phenotype//motility//options//advanced_chemotaxis//
DEBUG:root:chemotactic_sensitivity= {'oxygen': '0.0', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:sensitivity_path= .//cell_definition[1]//phenotype//motility//options//advanced_chemotaxis//chemotactic_sensitivities
DEBUG:root:---- found chemotactic_sensitivities: <Element 'chemotactic_sensitivities' at 0x17e8d2a40>
DEBUG:root:subelm=<Element 'chemotactic_sensitivity' at 0x17e8d2ae0>
DEBUG:root: chemotactic_sensitivity--> oxygen = 1
DEBUG:root:subelm=<Element 'chemotactic_sensitivity' at 0x17e8d2b80>
DEBUG:root: chemotactic_sensitivity--> apoptotic debris = 0.0
DEBUG:root:subelm=<Element 'chemotactic_sensitivity' at 0x17e8d2bd0>
DEBUG:root: chemotactic_sensitivity--> necrotic debris = 0.0
DEBUG:root:{'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:------ motility2_substrate_changed_cb(): idx = 0
DEBUG:root:   text (subname) = oxygen
DEBUG:root:    motility_advanced_chemotaxis_substrate= oxygen
DEBUG:root:   chemotactic_sensitivity = {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:
===== populate_tree():  secretion
DEBUG:root:secretion_path = .//cell_definition[1]//phenotype//secretion//
DEBUG:root:uep_secretion = <Element 'secretion' at 0x17e8d2db0>
DEBUG:root:0) -- secretion substrate = oxygen
DEBUG:root:1) -- secretion substrate = apoptotic debris
DEBUG:root:2) -- secretion substrate = necrotic debris
DEBUG:root:------ done parsing secretion:
DEBUG:root:
===== populate_tree():  cell_interactions
DEBUG:root:---- cell_interactions_path= .//cell_definition[1]//phenotype//cell_interactions
DEBUG:root:---- found cell_interactions:
DEBUG:root:uep2= <Element 'live_phagocytosis_rates' at 0x17e8f7e00>
DEBUG:root: live_phagocytosis_rate= {'malignant epithelial cell': '0'}
DEBUG:root: attack_rate= {'malignant epithelial cell': '0'}
DEBUG:root: fusion_rate= {'malignant epithelial cell': '0'}
DEBUG:root:------ done parsing cell_interactions:
DEBUG:root:---- transformation_rates_path = .//cell_definition[1]//phenotype//cell_transformations//transformation_rates
DEBUG:root: transformation_rate= {'malignant epithelial cell': '0'}
DEBUG:root:------ done parsing cell_transformations:
DEBUG:root:
===== populate_tree():  molecular
DEBUG:root:
===== populate_tree():  intracellular
DEBUG:root:------ done parsing intracellular:
DEBUG:root:
===== populate_tree():  custom data
DEBUG:root:uep_custom_data= <Element 'custom_data' at 0x17e8fb8b0>
DEBUG:root:--------------- populate_tree: (empty)custom_data = {}
DEBUG:root:var.attrib.keys() = dict_keys(['conserved', 'units', 'description'])
DEBUG:root:populate: cell_def_name= malignant epithelial cell --> custom_data: {'sample': ['1.0', False]}
DEBUG:root:
----- update_motility_params():  cdname= malignant epithelial cell
DEBUG:root:     setting motility_substrate_dropdown (for cdname= malignant epithelial cell ) = oxygen
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= malignant epithelial cell ) = oxygen
DEBUG:root:    chemotactic_sensitivity= {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:new val = 1
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = malignant epithelial cell
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = oxygen
DEBUG:root:{'oxygen': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '10', 'net_export_rate': '0'}, 'apoptotic debris': {'secretion_rate': '0.0', 'secretion_target': '1', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}, 'necrotic debris': {'secretion_rate': '0.0', 'secretion_target': '1', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}}
DEBUG:root:cell_def_tab.py: ------- fill_celltypes_comboboxes
DEBUG:root:ics_tab.py: fill_celltype_combobox(): ['malignant epithelial cell']
DEBUG:root:

------------  user_params_tab: fill_gui --------------
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 1
DEBUG:root:cdefs_in_tree =['malignant epithelial cell']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 1
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 1
DEBUG:root:cdefs_in_tree =['malignant epithelial cell']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 1
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 1
DEBUG:root:cdefs_in_tree =['malignant epithelial cell']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 1
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=7.0.
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalParthian-Regular.ttf', name='Noto Sans Inscriptional Parthian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSundanese-Regular.ttf', name='Noto Sans Sundanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMahajani-Regular.ttf', name='Noto Sans Mahajani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMono.ttf', name='.SF NS Mono', style='normal', variant='normal', weight=295, stretch='normal', size='scalable')) = 10.14975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerif.ttc', name='PT Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSans.ttc', name='PT Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SuperClarendon.ttc', name='Superclarendon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGlagolitic-Regular.ttf', name='Noto Sans Glagolitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Brush Script.ttf', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTMono.ttc', name='PT Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagalog-Regular.ttf', name='Noto Sans Tagalog', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHatran-Regular.ttf', name='Noto Sans Hatran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldSouthArabian-Regular.ttf', name='Noto Sans Old South Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCoptic-Regular.ttf', name='Noto Sans Coptic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSRounded.ttf', name='.SF NS Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiLe-Regular.ttf', name='Noto Sans Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NewYorkItalic.ttf', name='.New York', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansChakma-Regular.ttf', name='Noto Sans Chakma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Apple Chancery.ttf', name='Apple Chancery', style='normal', variant='normal', weight=0, stretch='normal', size='scalable')) = 10.43
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPermic-Regular.ttf', name='Noto Sans Old Permic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorBangla.ttc', name='Kohinoor Bangla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/MuktaMahee.ttc', name='Mukta Mahee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold.ttf', name='Arial Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRejang-Regular.ttf', name='Noto Sans Rejang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuhid-Regular.ttf', name='Noto Sans Buhid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Times.ttc', name='Times', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gujarati Sangam MN.ttc', name='Gujarati Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Nadeem.ttc', name='Nadeem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDBol.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralItalic.otf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Raanana.ttc', name='Raanana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi Gold.ttf', name='Mishafi Gold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkboard.ttc', name='Chalkboard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKayahLi-Regular.ttf', name='Noto Sans Kayah Li', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearB-Regular.ttf', name='Noto Sans Linear B', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil Sangam MN.ttc', name='Tamil Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next Condensed.ttc', name='Avenir Next Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymReg.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansEgyptianHieroglyphs-Regular.ttf', name='Noto Sans Egyptian Hieroglyphs', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GillSans.ttc', name='Gill Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorTelugu.ttc', name='Kohinoor Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhagsPa-Regular.ttf', name='Noto Sans PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompact.ttf', name='.SF Compact', style='normal', variant='normal', weight=1000, stretch='normal', size='scalable')) = 10.62
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu Sangam MN.ttc', name='Telugu Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/PingFang.ttc', name='PingFang HK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next.ttc', name='Avenir Next', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farisi.ttf', name='Farisi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneral.otf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni Ornaments.ttf', name='Bodoni Ornaments', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Seravek.ttc', name='Seravek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSyriac-Regular.ttf', name='Noto Sans Syriac', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AmericanTypewriter.ttc', name='American Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya Sangam MN.ttc', name='Oriya Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDReg.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSaurashtra-Regular.ttf', name='Noto Sans Saurashtra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 2.ttf', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMarchen-Regular.ttf', name='Noto Sans Marchen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBolIta.otf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ChalkboardSE.ttc', name='Chalkboard SE', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFiveSymReg.otf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ArialHB.ttc', name='Arial Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Cochin.ttc', name='Cochin', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Damascus.ttc', name='Damascus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text.ttc', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DecoTypeNaskh.ttc', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao MN.ttc', name='Lao MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AlBayan.ttc', name='Al Bayan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/GeezaPro.ttc', name='Geeza Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWarangCiti-Regular.ttf', name='Noto Sans Warang Citi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W4.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sana.ttc', name='Sana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Thuluth.ttf', name='Diwan Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Medium.ttc', name='Heiti TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymBol.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTirhuta-Regular.ttf', name='Noto Sans Tirhuta', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar Sangam MN.ttc', name='Myanmar Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAvestan-Regular.ttf', name='Noto Sans Avestan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W5.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansManichaean-Regular.ttf', name='Noto Sans Manichaean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifYezidi-Regular.otf', name='Noto Serif Yezidi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Herculanum.ttf', name='Herculanum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Courier.ttc', name='Courier', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Galvji.ttc', name='Galvji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/InaiMathi-MN.ttc', name='InaiMathi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhudawadi-Regular.ttf', name='Noto Sans Khudawadi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ITFDevanagari.ttc', name='ITF Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Black.ttf', name='Arial Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMro-Regular.ttf', name='Noto Sans Mro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Kufi.ttc', name='Diwan Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansArmenian.ttc', name='Noto Sans Armenian', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Futura.ttc', name='Futura', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansYi-Regular.ttf', name='Noto Sans Yi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya MN.ttc', name='Oriya MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Noteworthy.ttc', name='Noteworthy', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansDuployan-Regular.ttf', name='Noto Sans Duployan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmReg.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpReg.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/HelveticaNeue.ttc', name='Helvetica Neue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kefa.ttc', name='Kefa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansThaana-Regular.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansJavanese-Regular.otf', name='Noto Sans Javanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanifiRohingya-Regular.ttf', name='Noto Sans Hanifi Rohingya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi MN.ttc', name='Gurmukhi MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NewPeninimMT.ttc', name='New Peninim MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Waseem.ttc', name='Waseem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W2.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWancho-Regular.ttf', name='Noto Sans Wancho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldTurkic-Regular.ttf', name='Noto Sans Old Turkic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SignPainter.ttc', name='SignPainter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 Smallcaps Book.ttf', name='Bodoni 72 Smallcaps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Menlo.ttc', name='Menlo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansModi-Regular.ttf', name='Noto Sans Modi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Symbols.ttf', name='Apple Symbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansMyanmar.ttc', name='Noto Sans Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil MN.ttc', name='Tamil MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPsalterPahlavi-Regular.ttf', name='Noto Sans Psalter Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Optima.ttc', name='Optima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoNastaliq.ttc', name='Noto Nastaliq Urdu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVarBol.otf', name='STIXVariants', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/AppleSDGothicNeo.ttc', name='Apple SD Gothic Neo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/LucidaGrande.ttc', name='Lucida Grande', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 2.872272727272727
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer MN.ttc', name='Khmer MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Shree714.ttc', name='Shree Devanagari 714', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma Bold.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Phosphate.ttc', name='Phosphate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W6.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkduster.ttf', name='Chalkduster', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMonoItalic.ttf', name='.SF NS Mono', style='italic', variant='normal', weight=295, stretch='normal', size='scalable')) = 11.14975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMandaic-Regular.ttf', name='Noto Sans Mandaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeeteiMayek-Regular.ttf', name='Noto Sans Meetei Mayek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada Sangam MN.ttc', name='Kannada Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PlantagenetCherokee.ttf', name='Plantagenet Cherokee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhojki-Regular.ttf', name='Noto Sans Khojki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Hiragino Sans GB.ttc', name='Hiragino Sans GB', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Palatino.ttc', name='Palatino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSylotiNagri-Regular.ttf', name='Noto Sans Syloti Nagri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymBol.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSoraSompeng-Regular.ttf', name='Noto Sans Sora Sompeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMendeKikakui-Regular.ttf', name='Noto Sans Mende Kikakui', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansKannada.ttc', name='Noto Sans Kannada', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Alternate Bold.ttf', name='DIN Alternate', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorGujarati.ttc', name='Kohinoor Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Nile.ttc', name='Al Nile', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKaithi-Regular.ttf', name='Noto Sans Kaithi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGunjalaGondi-Regular.otf', name='Noto Sans Gunjala Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLepcha-Regular.ttf', name='Noto Sans Lepcha', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCypriot-Regular.ttf', name='Noto Sans Cypriot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W7.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W8.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpBol.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactItalic.ttf', name='.SF Compact', style='italic', variant='normal', weight=1000, stretch='normal', size='scalable')) = 11.62
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTakri-Regular.ttf', name='Noto Sans Takri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam MN.ttc', name='Malayalam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DevanagariMT.ttc', name='Devanagari MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPahawhHmong-Regular.ttf', name='Noto Sans Pahawh Hmong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPauCinHau-Regular.ttf', name='Noto Sans Pau Cin Hau', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymReg.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mshtakan.ttc', name='Mshtakan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymBol.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagbanwa-Regular.ttf', name='Noto Sans Tagbanwa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBamum-Regular.ttf', name='Noto Sans Bamum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Condensed Bold.ttf', name='DIN Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao Sangam MN.ttf', name='Lao Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W1.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansUgaritic-Regular.ttf', name='Noto Sans Ugaritic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNKo-Regular.ttf', name='Noto Sans NKo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trattatello.ttf', name='Trattatello', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W0.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir.ttc', name='Avenir', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Athelas.ttc', name='Athelas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Corsiva.ttc', name='Corsiva Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUni.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPersian-Regular.ttf', name='Noto Sans Old Persian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerifCaption.ttc', name='PT Serif Caption', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Geneva.ttf', name='Geneva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.595454545454545
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSharada-Regular.ttf', name='Noto Sans Sharada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansElbasan-Regular.ttf', name='Noto Sans Elbasan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansImperialAramaic-Regular.ttf', name='Noto Sans Imperial Aramaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBatak-Regular.ttf', name='Noto Sans Batak', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBol.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Monaco.ttf', name='Monaco', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLydian-Regular.ttf', name='Noto Sans Lydian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMiao-Regular.ttf', name='Noto Sans Miao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi.ttf', name='Gurmukhi MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCaucasianAlbanian-Regular.ttf', name='Noto Sans Caucasian Albanian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifAhom-Regular.ttf', name='Noto Serif Ahom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuginese-Regular.ttf', name='Noto Sans Buginese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCham-Regular.ttf', name='Noto Sans Cham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla MN.ttc', name='Bangla MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymReg.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SukhumvitSet.ttc', name='Sukhumvit Set', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Light.ttc', name='Heiti TC', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSiddham-Regular.ttf', name='Noto Sans Siddham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow.ttf', name='Arial Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKharoshthi-Regular.ttf', name='Noto Sans Kharoshthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Keyboard.ttf', name='.Keyboard', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/EuphemiaCAS.ttc', name='Euphemia UCAS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanunoo-Regular.ttf', name='Noto Sans Hanunoo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmReg.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baskerville.ttc', name='Baskerville', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Microsoft Sans Serif.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bradley Hand Bold.ttf', name='Bradley Hand', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMongolian-Regular.ttf', name='Noto Sans Mongolian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBassaVah-Regular.ttf', name='Noto Sans Bassa Vah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLycian-Regular.ttf', name='Noto Sans Lycian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Kohinoor.ttc', name='Kohinoor Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SnellRoundhand.ttc', name='Snell Roundhand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer Sangam MN.ttf', name='Khmer Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCarian-Regular.ttf', name='Noto Sans Carian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTifinagh-Regular.ttf', name='Noto Sans Tifinagh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymReg.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Luminari.ttf', name='Luminari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Beirut.ttc', name='Beirut', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar MN.ttc', name='Myanmar MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Skia.ttf', name='Skia', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOlChiki-Regular.ttf', name='Noto Sans Ol Chiki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Tarikh.ttc', name='Al Tarikh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu MN.ttc', name='Telugu MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabic.ttf', name='.SF Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGothic-Regular.ttf', name='Noto Sans Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCuneiform-Regular.ttf', name='Noto Sans Cuneiform', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/KufiStandardGK.ttc', name='KufiStandardGK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Muna.ttc', name='Muna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymBol.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farah.ttc', name='Farah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiViet-Regular.ttf', name='Noto Sans Tai Viet', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBol.otf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GujaratiMT.ttc', name='Gujarati MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Rounded Bold.ttf', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmBol.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSItalic.ttf', name='System Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baghdad.ttc', name='Baghdad', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Copperplate.ttc', name='Copperplate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSamaritan-Regular.ttf', name='Noto Sans Samaritan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72.ttc', name='Bodoni 72', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldHungarian-Regular.ttf', name='Noto Sans Old Hungarian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Marion.ttc', name='Marion', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Charter.ttc', name='Charter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLimbu-Regular.ttf', name='Noto Sans Limbu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sathu.ttf', name='Sathu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNabataean-Regular.ttf', name='Noto Sans Nabataean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleGothic.ttf', name='AppleGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W9.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Krungthep.ttf', name='Krungthep', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NewYork.ttf', name='.New York', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsmanya-Regular.ttf', name='Noto Sans Osmanya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Devanagari Sangam MN.ttc', name='Devanagari Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Silom.ttf', name='Silom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAdlam-Regular.ttf', name='Noto Sans Adlam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactRounded.ttf', name='.SF Compact Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBhaiksuki-Regular.ttf', name='Noto Sans Bhaiksuki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala MN.ttc', name='Sinhala MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi Sangam MN.ttc', name='Gurmukhi Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPalmyrene-Regular.ttf', name='Noto Sans Palmyrene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Iowan Old Style.ttc', name='Iowan Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi.ttf', name='Mishafi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/AquaKana.ttc', name='.Aqua Kana', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kokonor.ttf', name='Kokonor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNS.ttf', name='System Font', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVar.otf', name='STIXVariants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalPahlavi-Regular.ttf', name='Noto Sans Inscriptional Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDReg.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Library/Fonts/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Didot.ttc', name='Didot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewa-Regular.ttf', name='Noto Sans Newa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifBalinese-Regular.ttf', name='Noto Serif Balinese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W3.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 OS.ttc', name='Bodoni 72 Oldstyle', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansVai-Regular.ttf', name='Noto Sans Vai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text Ornaments.ttf', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBrahmi-Regular.ttf', name='Noto Sans Brahmi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Songti.ttc', name='Songti SC', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMultani-Regular.ttf', name='Noto Sans Multani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/MarkerFelt.ttc', name='Marker Felt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldNorthArabian-Regular.ttf', name='Noto Sans Old North Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/BigCaslon.ttf', name='Big Caslon', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsage-Regular.ttf', name='Noto Sans Osage', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeroitic-Regular.ttf', name='Noto Sans Meroitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 3.ttf', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBolIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam Sangam MN.ttc', name='Malayalam Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldItalic-Regular.ttf', name='Noto Sans Old Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PartyLET-plain.ttf', name='Party LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala Sangam MN.ttc', name='Sinhala Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Academy Engraved LET Fonts.ttf', name='Academy Engraved LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada MN.ttc', name='Kannada MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Savoye LET.ttc', name='Savoye LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Papyrus.ttc', name='Papyrus', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Rockwell.ttc', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmBol.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ZapfDingbats.ttf', name='Zapf Dingbats', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Helvetica.ttc', name='Helvetica', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.322727272727273
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Ayuthaya.ttf', name='Ayuthaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiTham-Regular.ttf', name='Noto Sans Tai Tham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ丸ゴ ProN W4.ttc', name='Hiragino Maru Gothic Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleMyungjo.ttf', name='AppleMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMasaramGondi-Regular.otf', name='Noto Sans Masaram Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearA-Regular.ttf', name='Noto Sans Linear A', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ明朝 ProN.ttc', name='Hiragino Mincho ProN', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSerifMyanmar.ttc', name='Noto Serif Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewTaiLue-Regular.ttf', name='Noto Sans New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Zapfino.ttf', name='Zapfino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDBol.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Andale Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla Sangam MN.ttc', name='Bangla Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kailasa.ttc', name='Kailasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Thonburi.ttc', name='Thonburi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansOriya.ttc', name='Noto Sans Oriya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhoenician-Regular.ttf', name='Noto Sans Phoenician', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=7.0 to DejaVu Sans ('/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x157e67580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e8f3c70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17ed89c70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17ed92220>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e8fdfa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a3827f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e9f35b0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16a382400> <matplotlib.colors.Normalize object at 0x16a382400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e946af0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16a382400> <matplotlib.colors.Normalize object at 0x16a382400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e946af0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e946700>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e99a1f0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f5a3550> <matplotlib.colors.Normalize object at 0x17f5a3550>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c636ee0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f5a3550> <matplotlib.colors.Normalize object at 0x17f5a3550>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c636ee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c62d9d0>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 1
DEBUG:root:cdefs_in_tree =['malignant epithelial cell']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 1
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 1
DEBUG:root:cdefs_in_tree =['malignant epithelial cell']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 1
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17e8edbb0> <matplotlib.colors.Normalize object at 0x17e8edbb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f8d2c40>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17e8edbb0> <matplotlib.colors.Normalize object at 0x17e8edbb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f8d2c40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edda610>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f6fadc0> <matplotlib.colors.Normalize object at 0x17f6fadc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edf2130>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f6fadc0> <matplotlib.colors.Normalize object at 0x17f6fadc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edf2130>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f71f9a0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17e9f39a0> <matplotlib.colors.Normalize object at 0x17e9f39a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f718910>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17e9f39a0> <matplotlib.colors.Normalize object at 0x17e9f39a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f718910>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x157e73790>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16f1d70a0> <matplotlib.colors.Normalize object at 0x16f1d70a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a3acf10>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16f1d70a0> <matplotlib.colors.Normalize object at 0x16f1d70a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a3acf10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f486670>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f5d59d0> <matplotlib.colors.Normalize object at 0x17f5d59d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f8d2100>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f5d59d0> <matplotlib.colors.Normalize object at 0x17f5d59d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f8d2100>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8bf520>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16a421c70> <matplotlib.colors.Normalize object at 0x16a421c70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b931fa0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16a421c70> <matplotlib.colors.Normalize object at 0x16a421c70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b931fa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3a9c70>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f498a30> <matplotlib.colors.Normalize object at 0x17f498a30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3c2d00>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f498a30> <matplotlib.colors.Normalize object at 0x17f498a30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3c2d00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f717d60>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f597a30> <matplotlib.colors.Normalize object at 0x17f597a30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5c4d60>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f597a30> <matplotlib.colors.Normalize object at 0x17f597a30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5c4d60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5c4790>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f6fba30> <matplotlib.colors.Normalize object at 0x17f6fba30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e8f88b0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f6fba30> <matplotlib.colors.Normalize object at 0x17f6fba30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e8f88b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e8f8670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5d5070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f614520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f59d190>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c912490>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c636070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b660e20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f59d1f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e99fd30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17eda1e80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f729e80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edcf190>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e987550>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e9f77f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edacac0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e99abb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5ed0d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b6ac220>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e8f3f10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c62db80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f0a5100>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5eda00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e9f3130>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f7149a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e8fdcd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edf83d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f402be0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e9ee6d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f6fa790>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c90ca60>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17ed8dc70> <matplotlib.colors.Normalize object at 0x17ed8dc70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17ed92520>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17ed8dc70> <matplotlib.colors.Normalize object at 0x17ed8dc70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17ed92520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3c8eb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e8f33d0>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 1
DEBUG:root:cdefs_in_tree =['malignant epithelial cell']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 1
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d1ff5b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c6655e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d321100>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d2f72e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a421280>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17ed89c40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edf8640>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d254b50>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16b56de20> <matplotlib.colors.Normalize object at 0x16b56de20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e99af40>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16b56de20> <matplotlib.colors.Normalize object at 0x16b56de20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e99af40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b59f670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f664f10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e9e6850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3b6af0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f8e6730> <matplotlib.colors.Normalize object at 0x17f8e6730>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e901370>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f8e6730> <matplotlib.colors.Normalize object at 0x17f8e6730>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e901370>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e8de310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17ed9aa30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e9f7760>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b90b280>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f5cc2e0> <matplotlib.colors.Normalize object at 0x17f5cc2e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3ac9a0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f5cc2e0> <matplotlib.colors.Normalize object at 0x17f5cc2e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3ac9a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5db070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8a1640>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x15377a850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.FixedLocator object at 0x17f40e610>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16b4ade20> <matplotlib.colors.Normalize object at 0x16b4ade20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x15377a850>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16b4ade20> <matplotlib.colors.Normalize object at 0x16b4ade20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.FixedLocator object at 0x17f40e610>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16b4ade20> <matplotlib.colors.Normalize object at 0x16b4ade20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x15377a850>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16b4ade20> <matplotlib.colors.Normalize object at 0x16b4ade20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.FixedLocator object at 0x17f40e610>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e8f6430>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c665580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d2f7520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f4dd280>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5c26a0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f453c10> <matplotlib.colors.Normalize object at 0x17f453c10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16f1fd640>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f453c10> <matplotlib.colors.Normalize object at 0x17f453c10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16f1fd640>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f621520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f8e68b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f728ca0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edec370>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f3f1c10> <matplotlib.colors.Normalize object at 0x17f3f1c10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16f1f9eb0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f3f1c10> <matplotlib.colors.Normalize object at 0x17f3f1c10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16f1f9eb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c60b670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f0bdbb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b49e520>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17e9ea370> <matplotlib.colors.Normalize object at 0x17e9ea370>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e8ed2b0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17e9ea370> <matplotlib.colors.Normalize object at 0x17e9ea370>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e8ed2b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8b98e0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17d298d30> <matplotlib.colors.Normalize object at 0x17d298d30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1537a3d30>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17d298d30> <matplotlib.colors.Normalize object at 0x17d298d30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1537a3d30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f0abb20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f0bdc40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c62d640>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d326e20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d303580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f6d12e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e9d8be0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f6e2ee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b922400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b67b820>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c664610>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8bfdf0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b8f7c10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c9120a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e946850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8bffd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3a5eb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f498d60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b4c3910>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b89ef70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e8fd220>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17ed7fdf0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5659a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3eaa60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f6ffa00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f4f8940>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f8f6bb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8a1160>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f4c3460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edbd640>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8b9a90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e8eae80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a3ac730>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b4b7700>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e916340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c665490>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e9ee6a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e8ea4f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8a1c10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b67b3d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3bd370>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edcf460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f597340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f590160>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c62db20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f570a90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f708520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edf2e20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5cbca0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b567130>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3aabe0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b902970>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3c3f10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c627d30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b598370>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b5751c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8a1cd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3ac9d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edf8d90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f4c3580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8a18b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f597280>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edb7eb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b67b7f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f4f8370>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f6ccc10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e916400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e99fca0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f498c40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8bf610>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f716880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17ed85100>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f6ec910>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c90c340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f43d8e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5901f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f8e6fa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1537a3400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f0b67c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16f1fd820>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5062b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a3e4e50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d269b50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e9e17f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5f5b80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f61de50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b584d00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f4dfc10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edda460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f6294f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5daa00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f590bb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5b0c40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edc32e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a3acb80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f566d90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f4d2ca0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a412af0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e9d8280>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f616040>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a3cc2e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b5901c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f6a9700>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f458fd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c90ce50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c912be0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16f1d7dc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d236d60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f0c3730>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f6c8d00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e946a60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f6cb310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8a1d60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5064c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e9f7df0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3b8f70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e9e63d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3cfd30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f760f40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b67b8b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b91d340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e99abb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d26f9a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f6b9880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f59de50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b670370>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edac370>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b6aafa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f756b20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f6cfca0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8bfa00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e99a940>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f753280>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f531f70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5b05e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b685610>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f4343a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f0ab4f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17eda67c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e949c40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f42eca0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e946970>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f0bd9a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c62d0a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b59fa60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f560d90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e9d8850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e9dd2e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b5779d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d26f3a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f664850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5ca490>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8a1760>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f55fbe0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e901be0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x157e670a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f505fa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f75e940>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e9499a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b681700>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d25d2b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f633d60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edda7c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3b2280>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5a66a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16f1fd550>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f7200a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e949100>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f4df400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f4b1580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f4bc5e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d262070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3f77c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d2a1d30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f4a7520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f4dd850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f6e27c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b6a7ac0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e9f3640>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edec5b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f4ef4c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b6680a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f71aac0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edc9d00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edb7fa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b580c10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b581370>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edeccd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a4210a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f731130>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8b2cd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5e2940>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c62db80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17ed85d00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d289ca0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f425a90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f62eb20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a3cc1f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a41a100>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f0b12e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b69ecd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f660ee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e99f850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f4df820>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e946340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x157e73550>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b56c370>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b90b730>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edc3fd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5975e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edcf100>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d2621f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e9315e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5bf6a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e9499a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b6a85b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a41aee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3bf670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b492160>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f498310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3bbcd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f54a5e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c6223a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f52f9d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8bfeb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b89e340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x157e67640>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f6edd60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f578520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17ede0d00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f59d520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e931d60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f0a5910>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f4e3760>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f425ac0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f8ebdf0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f8c3670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d26f7c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b8f9850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3d5250>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f8eb8b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e99fb20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f8d2790>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f8e67f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b911a30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c6125b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.FixedLocator object at 0x16a3ec190>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17d2604c0> <matplotlib.colors.Normalize object at 0x17d2604c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c6125b0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17d2604c0> <matplotlib.colors.Normalize object at 0x17d2604c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.FixedLocator object at 0x16a3ec190>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17d2604c0> <matplotlib.colors.Normalize object at 0x17d2604c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c6125b0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17d2604c0> <matplotlib.colors.Normalize object at 0x17d2604c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.FixedLocator object at 0x16a3ec190>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f0bd7c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a3cc2e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5dc7f0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f5a3bb0> <matplotlib.colors.Normalize object at 0x17f5a3bb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b6817c0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f5a3bb0> <matplotlib.colors.Normalize object at 0x17f5a3bb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b6817c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f56b3d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f71a400>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f8d8460> <matplotlib.colors.Normalize object at 0x17f8d8460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e99f9d0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f8d8460> <matplotlib.colors.Normalize object at 0x17f8d8460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e99f9d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e9f7a00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.FixedLocator object at 0x17e9f74f0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f8d8460> <matplotlib.colors.Normalize object at 0x17f8d8460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e9f7a00>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f8d8460> <matplotlib.colors.Normalize object at 0x17f8d8460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.FixedLocator object at 0x17e9f74f0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f8d8460> <matplotlib.colors.Normalize object at 0x17f8d8460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e9f7a00>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f8d8460> <matplotlib.colors.Normalize object at 0x17f8d8460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.FixedLocator object at 0x17e9f74f0>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 1
DEBUG:root:cdefs_in_tree =['malignant epithelial cell']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 1
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:
--------new_interaction_params(): cdname_new= ntype_thj
DEBUG:root:
--------new_intracellular_params(): cdname_new= ntype_thj
DEBUG:root:------- new_custom_data_params() -----
DEBUG:root:num_vals = 1
DEBUG:root:sample, ['1.0', False]
DEBUG:root:cell_def_tab.py: ------- add_new_celltype_comboboxes ntype_thj
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> transition rate     
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>transition rate     
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:key 0= malignant epithelial cell
DEBUG:root:keys 1= dict_keys(['malignant epithelial cell', 'ntype_thj'])
DEBUG:root:keys 2= dict_keys(['malignant epithelial cell', '', 'ntype_thj'])
DEBUG:root:
----- update_motility_params():  cdname= ntype_thj
DEBUG:root:     setting motility_substrate_dropdown (for cdname= ntype_thj ) = oxygen
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= ntype_thj ) = oxygen
DEBUG:root:    chemotactic_sensitivity= {'oxygen': '0.0', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- chemo_sensitivity_changed() = 0.0
DEBUG:root:----- chemo_sensitivity_changed(): subname = oxygen
DEBUG:root:     chemotactic_sensitivity (dict)= {'oxygen': '0.0', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = ntype_thj
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = oxygen
DEBUG:root:{'oxygen': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}, 'apoptotic debris': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}, 'necrotic debris': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}}
DEBUG:root:key 0= malignant epithelial cell
DEBUG:root:keys 1= dict_keys(['malignant epithelial cell', 'ntype_thj'])
DEBUG:root:keys 2= dict_keys(['malignant epithelial cell', '', 'ntype_thj'])
DEBUG:root:
----- update_motility_params():  cdname= ntype_thj
DEBUG:root:     setting motility_substrate_dropdown (for cdname= ntype_thj ) = oxygen
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= ntype_thj ) = oxygen
DEBUG:root:    chemotactic_sensitivity= {'oxygen': '0.0', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = ntype_thj
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = oxygen
DEBUG:root:{'oxygen': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}, 'apoptotic debris': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}, 'necrotic debris': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}}
DEBUG:root:--------- tree_item_changed_cb(): <PyQt5.QtWidgets.QTreeWidgetItem object at 0x17f3a8280>, 0, macrophage
DEBUG:root:prev_name= ntype_thj
DEBUG:root:new name= macrophage
DEBUG:root:cell_def_tab.py: ------- renamed_celltype() ntype_thj -> macrophage
DEBUG:root:    self.celltypes_list= ['malignant epithelial cell', 'macrophage']
DEBUG:root: 
DEBUG:root:{'secretion': {'oxygen': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '10', 'net_export_rate': '0'}, 'apoptotic debris': {'secretion_rate': '0.0', 'secretion_target': '1', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}, 'necrotic debris': {'secretion_rate': '0.0', 'secretion_target': '1', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}}, 'chemotactic_sensitivity': {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}, 'cell_adhesion_affinity': {'malignant epithelial cell': '1', '': '1.0', 'ntype_thj': '1.0'}, 'transformation_rate': {'malignant epithelial cell': '0', '': '0.0', 'ntype_thj': '0.0'}, 'live_phagocytosis_rate': {'malignant epithelial cell': '0', '': '0.0', 'ntype_thj': '0.0'}, 'attack_rate': {'malignant epithelial cell': '0', '': '0.0', 'ntype_thj': '0.0'}, 'fusion_rate': {'malignant epithelial cell': '0', '': '0.0', 'ntype_thj': '0.0'}, 'cycle_choice_idx': 4, 'cycle_live_trate00': '0.00072', 'cycle_Ki67_trate01': '3.63108e-3', 'cycle_Ki67_trate10': '1.07527e-3', 'cycle_advancedKi67_trate01': '4.60405e-3', 'cycle_advancedKi67_trate12': '1.28205e-3', 'cycle_advancedKi67_trate20': '6.66666e-3', 'cycle_flowcyto_trate01': '0.00324', 'cycle_flowcyto_trate12': '0.00208', 'cycle_flowcyto_trate20': '0.00333', 'cycle_flowcytosep_trate01': '0.00003333', 'cycle_flowcytosep_trate12': '0.002083', 'cycle_flowcytosep_trate23': '0.004167', 'cycle_flowcytosep_trate30': '0.016667', 'cycle_quiescent_trate01': '3.63108e-3', 'cycle_quiescent_trate10': '1.07527e-3', 'cycle_live_duration00': '1388.88889', 'cycle_Ki67_duration01': '275.40015', 'cycle_Ki67_duration10': '929.99898', 'cycle_advancedKi67_duration01': '217.20007', 'cycle_advancedKi67_duration12': '780.00078', 'cycle_advancedKi67_duration20': '150.00015', 'cycle_flowcyto_duration01': '308.64198', 'cycle_flowcyto_duration12': '480.76923', 'cycle_flowcyto_duration20': '300.30030', 'cycle_flowcytosep_duration01': '30003.000300', 'cycle_flowcytosep_duration12': '480.076812', 'cycle_flowcytosep_duration23': '239.980802', 'cycle_flowcytosep_duration30': '59.998800', 'cycle_quiescent_duration01': '275.40016', 'cycle_quiescent_duration10': '929.99898', 'cycle_live_trate00_fixed': False, 'cycle_Ki67_trate01_fixed': False, 'cycle_Ki67_trate10_fixed': True, 'cycle_advancedKi67_trate01_fixed': False, 'cycle_advancedKi67_trate12_fixed': True, 'cycle_advancedKi67_trate20_fixed': True, 'cycle_flowcyto_trate01_fixed': False, 'cycle_flowcyto_trate12_fixed': False, 'cycle_flowcyto_trate20_fixed': False, 'cycle_flowcytosep_trate01_fixed': False, 'cycle_flowcytosep_trate12_fixed': True, 'cycle_flowcytosep_trate23_fixed': True, 'cycle_flowcytosep_trate30_fixed': True, 'cycle_quiescent_trate01_fixed': False, 'cycle_quiescent_trate10_fixed': True, 'cycle_live_duration00_fixed': False, 'cycle_Ki67_duration01_fixed': False, 'cycle_Ki67_duration10_fixed': True, 'cycle_advancedKi67_duration01_fixed': False, 'cycle_advancedKi67_duration12_fixed': True, 'cycle_advancedKi67_duration20_fixed': True, 'cycle_flowcyto_duration01_fixed': False, 'cycle_flowcyto_duration12_fixed': False, 'cycle_flowcyto_duration20_fixed': False, 'cycle_flowcytosep_duration01_fixed': False, 'cycle_flowcytosep_duration12_fixed': True, 'cycle_flowcytosep_duration23_fixed': True, 'cycle_flowcytosep_duration30_fixed': True, 'cycle_quiescent_duration01_fixed': False, 'cycle_quiescent_duration10_fixed': True, 'death_rate': '5.31667e-05', 'apoptosis_death_rate': '5.31667e-05', 'apoptosis_phase0_duration': '516', 'apoptosis_phase0_fixed': True, 'apoptosis_duration_flag': True, 'apoptosis_unlysed_rate': '0.05', 'apoptosis_lysed_rate': '0', 'apoptosis_cyto_rate': '1.66667e-02', 'apoptosis_nuclear_rate': '5.83333e-03', 'apoptosis_calcif_rate': '0', 'apoptosis_rel_rupture_volume': '2.0', 'necrosis_death_rate': '0.01', 'necrosis_trate01': '9.e9', 'necrosis_trate01_fixed': True, 'necrosis_trate12': '0.000012', 'necrosis_trate12_fixed': True, 'necrosis_duration_flag': True, 'necrosis_phase0_duration': '0', 'necrosis_phase0_fixed': True, 'necrosis_phase1_duration': '86400', 'necrosis_phase1_fixed': True, 'necrosis_unlysed_rate': '1.11667e-2', 'necrosis_lysed_rate': '8.33333e-4', 'necrosis_cyto_rate': '5.33333e-5', 'necrosis_nuclear_rate': '2.16667e-3', 'necrosis_calcif_rate': '0', 'necrosis_rel_rupture_rate': '2.0', 'volume_total': '2494', 'volume_fluid_fraction': '0.75', 'volume_nuclear': '540', 'volume_fluid_change_rate': '0.05', 'volume_cytoplasmic_rate': '0.0045', 'volume_nuclear_rate': '0.0055', 'volume_calcif_fraction': '0', 'volume_calcif_rate': '0', 'volume_rel_rupture_vol': '2.0', 'mechanics_adhesion': '0.4', 'mechanics_repulsion': '10.0', 'mechanics_adhesion_distance': '1.5', 'mechanics_relative_equilibrium_distance': '1.8', 'mechanics_absolute_equilibrium_distance': '15.12', 'mechanics_relative_equilibrium_distance_enabled': False, 'mechanics_absolute_equilibrium_distance_enabled': False, 'mechanics_elastic_constant': '0.01', 'mechanics_attachment_rate': '0.0', 'mechanics_detachment_rate': '0.0', 'speed': '0.1', 'persistence_time': '1', 'migration_bias': '.5', 'motility_enabled': True, 'motility_use_2D': True, 'motility_chemotaxis': False, 'motility_chemotaxis_towards': True, 'motility_advanced_chemotaxis': True, 'normalize_each_gradient': False, 'dead_phagocytosis_rate': '0', 'damage_rate': '1', 'intracellular': None, 'ID': '0', 'cycle': 'flow cytometry separated', 'cycle_duration_flag': False, 'apoptosis_trate01': '0.001938', 'apoptosis_trate01_fixed': True, 'is_movable': True, 'mechanics_BM_adhesion': '4.0', 'mechanics_BM_repulsion': '10.0', 'motility_chemotaxis_substrate': 'oxygen', 'motility_advanced_chemotaxis_substrate': 'oxygen', 'custom_data': {'sample': ['1.0', False]}}
DEBUG:root:
----
DEBUG:root:{'secretion': {'oxygen': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}, 'apoptotic debris': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}, 'necrotic debris': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}}, 'chemotactic_sensitivity': {'oxygen': '0.0', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}, 'cell_adhesion_affinity': {'malignant epithelial cell': '1.0', '': '1.0', 'ntype_thj': '1.0'}, 'transformation_rate': {'malignant epithelial cell': '0.0', '': '0.0', 'ntype_thj': '0.0'}, 'live_phagocytosis_rate': {'malignant epithelial cell': '0.0', '': '0.0', 'ntype_thj': '0.0'}, 'attack_rate': {'malignant epithelial cell': '0.0', '': '0.0', 'ntype_thj': '0.0'}, 'fusion_rate': {'malignant epithelial cell': '0.0', '': '0.0', 'ntype_thj': '0.0'}, 'cycle_choice_idx': 0, 'cycle_live_trate00': '0.00072', 'cycle_Ki67_trate01': '3.63108e-3', 'cycle_Ki67_trate10': '1.07527e-3', 'cycle_advancedKi67_trate01': '4.60405e-3', 'cycle_advancedKi67_trate12': '1.28205e-3', 'cycle_advancedKi67_trate20': '6.66666e-3', 'cycle_flowcyto_trate01': '0.00324', 'cycle_flowcyto_trate12': '0.00208', 'cycle_flowcyto_trate20': '0.00333', 'cycle_flowcytosep_trate01': '0.00335', 'cycle_flowcytosep_trate12': '0.00208', 'cycle_flowcytosep_trate23': '0.00417', 'cycle_flowcytosep_trate30': '0.01667', 'cycle_quiescent_trate01': '3.63108e-3', 'cycle_quiescent_trate10': '1.07527e-3', 'cycle_live_duration00': '1388.88889', 'cycle_Ki67_duration01': '275.40015', 'cycle_Ki67_duration10': '929.99898', 'cycle_advancedKi67_duration01': '217.20007', 'cycle_advancedKi67_duration12': '780.00078', 'cycle_advancedKi67_duration20': '150.00015', 'cycle_flowcyto_duration01': '308.64198', 'cycle_flowcyto_duration12': '480.76923', 'cycle_flowcyto_duration20': '300.30030', 'cycle_flowcytosep_duration01': '298.50746', 'cycle_flowcytosep_duration12': '480.76923', 'cycle_flowcytosep_duration23': '239.80815', 'cycle_flowcytosep_duration30': '59.88024', 'cycle_quiescent_duration01': '275.40016', 'cycle_quiescent_duration10': '929.99898', 'cycle_live_trate00_fixed': False, 'cycle_Ki67_trate01_fixed': False, 'cycle_Ki67_trate10_fixed': True, 'cycle_advancedKi67_trate01_fixed': False, 'cycle_advancedKi67_trate12_fixed': True, 'cycle_advancedKi67_trate20_fixed': True, 'cycle_flowcyto_trate01_fixed': False, 'cycle_flowcyto_trate12_fixed': False, 'cycle_flowcyto_trate20_fixed': False, 'cycle_flowcytosep_trate01_fixed': False, 'cycle_flowcytosep_trate12_fixed': False, 'cycle_flowcytosep_trate23_fixed': False, 'cycle_flowcytosep_trate30_fixed': False, 'cycle_quiescent_trate01_fixed': False, 'cycle_quiescent_trate10_fixed': True, 'cycle_live_duration00_fixed': False, 'cycle_Ki67_duration01_fixed': False, 'cycle_Ki67_duration10_fixed': True, 'cycle_advancedKi67_duration01_fixed': False, 'cycle_advancedKi67_duration12_fixed': True, 'cycle_advancedKi67_duration20_fixed': True, 'cycle_flowcyto_duration01_fixed': False, 'cycle_flowcyto_duration12_fixed': False, 'cycle_flowcyto_duration20_fixed': False, 'cycle_flowcytosep_duration01_fixed': False, 'cycle_flowcytosep_duration12_fixed': False, 'cycle_flowcytosep_duration23_fixed': False, 'cycle_flowcytosep_duration30_fixed': False, 'cycle_quiescent_duration01_fixed': False, 'cycle_quiescent_duration10_fixed': True, 'death_rate': '5.31667e-05', 'apoptosis_death_rate': '5.31667e-05', 'apoptosis_phase0_duration': '516', 'apoptosis_phase0_fixed': False, 'apoptosis_duration_flag': False, 'apoptosis_unlysed_rate': '0.05', 'apoptosis_lysed_rate': '0', 'apoptosis_cyto_rate': '1.66667e-02', 'apoptosis_nuclear_rate': '5.83333e-03', 'apoptosis_calcif_rate': '0', 'apoptosis_rel_rupture_volume': '2.0', 'necrosis_death_rate': '0.0', 'necrosis_trate01': '9e9', 'necrosis_trate01_fixed': False, 'necrosis_trate12': '1.15741e-05', 'necrosis_trate12_fixed': True, 'necrosis_duration_flag': False, 'necrosis_phase0_duration': '1.11111e-10', 'necrosis_phase0_fixed': False, 'necrosis_phase1_duration': '86399.80646', 'necrosis_phase1_fixed': True, 'necrosis_unlysed_rate': '1.11667e-02', 'necrosis_lysed_rate': '8.33333e-4', 'necrosis_cyto_rate': '5.33333e-05', 'necrosis_nuclear_rate': '2.16667e-4', 'necrosis_calcif_rate': '7e-05', 'necrosis_rel_rupture_rate': '2.0', 'volume_total': '2494', 'volume_fluid_fraction': '0.75', 'volume_nuclear': '540', 'volume_fluid_change_rate': '0.05', 'volume_cytoplasmic_rate': '0.0045', 'volume_nuclear_rate': '0.0055', 'volume_calcif_fraction': '0.0', 'volume_calcif_rate': '0.0', 'volume_rel_rupture_vol': '2', 'mechanics_adhesion': '0.4', 'mechanics_repulsion': '10.0', 'mechanics_adhesion_distance': '1.25', 'mechanics_relative_equilibrium_distance': '1.8', 'mechanics_absolute_equilibrium_distance': '15.12', 'mechanics_relative_equilibrium_distance_enabled': False, 'mechanics_absolute_equilibrium_distance_enabled': False, 'mechanics_elastic_constant': '0.01', 'mechanics_attachment_rate': '0.0', 'mechanics_detachment_rate': '0.0', 'speed': '1.0', 'persistence_time': '1.0', 'migration_bias': '0.0', 'motility_enabled': False, 'motility_use_2D': True, 'motility_chemotaxis': False, 'motility_chemotaxis_towards': True, 'motility_advanced_chemotaxis': False, 'normalize_each_gradient': False, 'dead_phagocytosis_rate': '0.0', 'damage_rate': '1.0', 'intracellular': None, 'ID': '1', 'cycle': 'flow cytometry separated', 'cycle_duration_flag': False, 'apoptosis_trate01': '0.001938', 'apoptosis_trate01_fixed': False, 'is_movable': True, 'mechanics_BM_adhesion': '4.0', 'mechanics_BM_repulsion': '10.0', 'motility_chemotaxis_substrate': 'oxygen', 'motility_advanced_chemotaxis_substrate': 'oxygen', 'custom_data': {'sample': ['0.0', False]}}
DEBUG:root:
----
DEBUG:root:--- renaming all dicts with cell defs
DEBUG:root:--- cdname = malignant epithelial cell
DEBUG:root:--- cdname = macrophage
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['malignant epithelial cell', 'macrophage']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0', 'macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 1
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= macrophage
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:
--- key in param_d.keys() = macrophage
DEBUG:root:matched! macrophage
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1.0', '': '1.0', 'macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1.0
DEBUG:root:macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= macrophage
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= macrophage
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for macrophage
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for macrophage
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['malignant epithelial cell', 'macrophage']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0', 'macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 1
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= macrophage
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:
--- key in param_d.keys() = macrophage
DEBUG:root:matched! macrophage
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1.0', '': '1.0', 'macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1.0
DEBUG:root:macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= macrophage
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= macrophage
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for macrophage
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for macrophage
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['malignant epithelial cell', 'macrophage']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0', 'macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 1
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= macrophage
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:
--- key in param_d.keys() = macrophage
DEBUG:root:matched! macrophage
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1.0', '': '1.0', 'macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1.0
DEBUG:root:macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= macrophage
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= macrophage
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for macrophage
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for macrophage
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['malignant epithelial cell', 'macrophage']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0', 'macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 1
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= macrophage
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:
--- key in param_d.keys() = macrophage
DEBUG:root:matched! macrophage
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1.0', '': '1.0', 'macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1.0
DEBUG:root:macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= macrophage
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= macrophage
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for macrophage
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for macrophage
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['malignant epithelial cell', 'macrophage']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0', 'macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 1
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= macrophage
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:
--- key in param_d.keys() = macrophage
DEBUG:root:matched! macrophage
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1.0', '': '1.0', 'macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1.0
DEBUG:root:macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= macrophage
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= macrophage
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for macrophage
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for macrophage
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['malignant epithelial cell', 'macrophage']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0', 'macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 1
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= macrophage
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:
--- key in param_d.keys() = macrophage
DEBUG:root:matched! macrophage
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1.0', '': '1.0', 'macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1.0
DEBUG:root:macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= macrophage
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= macrophage
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for macrophage
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for macrophage
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:------ motility2_substrate_changed_cb(): idx = 1
DEBUG:root:   text (subname) = apoptotic debris
DEBUG:root:    motility_advanced_chemotaxis_substrate= apoptotic debris
DEBUG:root:   chemotactic_sensitivity = {'oxygen': '0.0', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:----- chemo_sensitivity_changed() = 1
DEBUG:root:----- chemo_sensitivity_changed(): subname = apoptotic debris
DEBUG:root:     chemotactic_sensitivity (dict)= {'oxygen': '0.0', 'apoptotic debris': '1', 'necrotic debris': '0.0'}
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['malignant epithelial cell', 'macrophage']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0', 'macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 1
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= macrophage
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:
--- key in param_d.keys() = macrophage
DEBUG:root:matched! macrophage
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1.0', '': '1.0', 'macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1.0
DEBUG:root:macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'apoptotic debris': '1', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:apoptotic debris  --> 1
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= macrophage
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= macrophage
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for macrophage
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for macrophage
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:------ motility2_substrate_changed_cb(): idx = 2
DEBUG:root:   text (subname) = necrotic debris
DEBUG:root:    motility_advanced_chemotaxis_substrate= necrotic debris
DEBUG:root:   chemotactic_sensitivity = {'oxygen': '0.0', 'apoptotic debris': '1', 'necrotic debris': '0.0'}
DEBUG:root:----- chemo_sensitivity_changed() = 0.0
DEBUG:root:----- chemo_sensitivity_changed(): subname = necrotic debris
DEBUG:root:     chemotactic_sensitivity (dict)= {'oxygen': '0.0', 'apoptotic debris': '1', 'necrotic debris': '0.0'}
DEBUG:root:----- chemo_sensitivity_changed() = 1
DEBUG:root:----- chemo_sensitivity_changed(): subname = necrotic debris
DEBUG:root:     chemotactic_sensitivity (dict)= {'oxygen': '0.0', 'apoptotic debris': '1', 'necrotic debris': '1'}
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['malignant epithelial cell', 'macrophage']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0', 'macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 1
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= macrophage
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:
--- key in param_d.keys() = macrophage
DEBUG:root:matched! macrophage
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1.0', '': '1.0', 'macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1.0
DEBUG:root:macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'apoptotic debris': '1', 'necrotic debris': '1'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:apoptotic debris  --> 1
DEBUG:root:necrotic debris  --> 1
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= macrophage
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= macrophage
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for macrophage
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for macrophage
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['malignant epithelial cell', 'macrophage']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0', 'macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 1
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= macrophage
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:
--- key in param_d.keys() = macrophage
DEBUG:root:matched! macrophage
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1.0', '': '1.0', 'macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1.0
DEBUG:root:macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'apoptotic debris': '1', 'necrotic debris': '1'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:apoptotic debris  --> 1
DEBUG:root:necrotic debris  --> 1
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= macrophage
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= macrophage
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for macrophage
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for macrophage
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:update_secretion_params(): cdname = macrophage
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = apoptotic debris
DEBUG:root:{'oxygen': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '10', 'net_export_rate': '0.0'}, 'apoptotic debris': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}, 'necrotic debris': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}}
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['malignant epithelial cell', 'macrophage']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0', 'macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 1
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= macrophage
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:
--- key in param_d.keys() = macrophage
DEBUG:root:matched! macrophage
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1.0', '': '1.0', 'macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1.0
DEBUG:root:macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'apoptotic debris': '1', 'necrotic debris': '1'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:apoptotic debris  --> 1
DEBUG:root:necrotic debris  --> 1
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= macrophage
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= macrophage
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for macrophage
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for macrophage
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:update_secretion_params(): cdname = macrophage
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = necrotic debris
DEBUG:root:{'oxygen': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '10', 'net_export_rate': '0.0'}, 'apoptotic debris': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '1', 'net_export_rate': '0.0'}, 'necrotic debris': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}}
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['malignant epithelial cell', 'macrophage']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0', 'macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 1
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= macrophage
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:
--- key in param_d.keys() = macrophage
DEBUG:root:matched! macrophage
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1.0', '': '1.0', 'macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1.0
DEBUG:root:macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'apoptotic debris': '1', 'necrotic debris': '1'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:apoptotic debris  --> 1
DEBUG:root:necrotic debris  --> 1
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= macrophage
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= macrophage
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for macrophage
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for macrophage
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:key 0= macrophage
DEBUG:root:keys 1= dict_keys(['malignant epithelial cell', 'macrophage'])
DEBUG:root:keys 2= dict_keys(['malignant epithelial cell', '', 'macrophage'])
DEBUG:root:
----- update_motility_params():  cdname= macrophage
DEBUG:root:     setting motility_substrate_dropdown (for cdname= macrophage ) = oxygen
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= macrophage ) = necrotic debris
DEBUG:root:    chemotactic_sensitivity= {'oxygen': '0.0', 'apoptotic debris': '1', 'necrotic debris': '1'}
DEBUG:root:new val = 1
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = macrophage
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = necrotic debris
DEBUG:root:{'oxygen': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '10', 'net_export_rate': '0.0'}, 'apoptotic debris': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '1', 'net_export_rate': '0.0'}, 'necrotic debris': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '1', 'net_export_rate': '0.0'}}
DEBUG:root:--------- tree_item_changed_cb(): <PyQt5.QtWidgets.QTreeWidgetItem object at 0x17f3a8280>, 0, M0 macrophage
DEBUG:root:prev_name= macrophage
DEBUG:root:new name= M0 macrophage
DEBUG:root:cell_def_tab.py: ------- renamed_celltype() macrophage -> M0 macrophage
DEBUG:root:    self.celltypes_list= ['malignant epithelial cell', 'M0 macrophage']
DEBUG:root: 
DEBUG:root:{'secretion': {'oxygen': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '10', 'net_export_rate': '0'}, 'apoptotic debris': {'secretion_rate': '0.0', 'secretion_target': '1', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}, 'necrotic debris': {'secretion_rate': '0.0', 'secretion_target': '1', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}}, 'chemotactic_sensitivity': {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}, 'cell_adhesion_affinity': {'malignant epithelial cell': '1', '': '1.0', 'macrophage': '1.0'}, 'transformation_rate': {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}, 'live_phagocytosis_rate': {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}, 'attack_rate': {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}, 'fusion_rate': {'malignant epithelial cell': '0', '': '0.0', 'macrophage': '0.0'}, 'cycle_choice_idx': 4, 'cycle_live_trate00': '0.00072', 'cycle_Ki67_trate01': '3.63108e-3', 'cycle_Ki67_trate10': '1.07527e-3', 'cycle_advancedKi67_trate01': '4.60405e-3', 'cycle_advancedKi67_trate12': '1.28205e-3', 'cycle_advancedKi67_trate20': '6.66666e-3', 'cycle_flowcyto_trate01': '0.00324', 'cycle_flowcyto_trate12': '0.00208', 'cycle_flowcyto_trate20': '0.00333', 'cycle_flowcytosep_trate01': '0.00003333', 'cycle_flowcytosep_trate12': '0.002083', 'cycle_flowcytosep_trate23': '0.004167', 'cycle_flowcytosep_trate30': '0.016667', 'cycle_quiescent_trate01': '3.63108e-3', 'cycle_quiescent_trate10': '1.07527e-3', 'cycle_live_duration00': '1388.88889', 'cycle_Ki67_duration01': '275.40015', 'cycle_Ki67_duration10': '929.99898', 'cycle_advancedKi67_duration01': '217.20007', 'cycle_advancedKi67_duration12': '780.00078', 'cycle_advancedKi67_duration20': '150.00015', 'cycle_flowcyto_duration01': '308.64198', 'cycle_flowcyto_duration12': '480.76923', 'cycle_flowcyto_duration20': '300.30030', 'cycle_flowcytosep_duration01': '30003.000300', 'cycle_flowcytosep_duration12': '480.076812', 'cycle_flowcytosep_duration23': '239.980802', 'cycle_flowcytosep_duration30': '59.998800', 'cycle_quiescent_duration01': '275.40016', 'cycle_quiescent_duration10': '929.99898', 'cycle_live_trate00_fixed': False, 'cycle_Ki67_trate01_fixed': False, 'cycle_Ki67_trate10_fixed': True, 'cycle_advancedKi67_trate01_fixed': False, 'cycle_advancedKi67_trate12_fixed': True, 'cycle_advancedKi67_trate20_fixed': True, 'cycle_flowcyto_trate01_fixed': False, 'cycle_flowcyto_trate12_fixed': False, 'cycle_flowcyto_trate20_fixed': False, 'cycle_flowcytosep_trate01_fixed': False, 'cycle_flowcytosep_trate12_fixed': True, 'cycle_flowcytosep_trate23_fixed': True, 'cycle_flowcytosep_trate30_fixed': True, 'cycle_quiescent_trate01_fixed': False, 'cycle_quiescent_trate10_fixed': True, 'cycle_live_duration00_fixed': False, 'cycle_Ki67_duration01_fixed': False, 'cycle_Ki67_duration10_fixed': True, 'cycle_advancedKi67_duration01_fixed': False, 'cycle_advancedKi67_duration12_fixed': True, 'cycle_advancedKi67_duration20_fixed': True, 'cycle_flowcyto_duration01_fixed': False, 'cycle_flowcyto_duration12_fixed': False, 'cycle_flowcyto_duration20_fixed': False, 'cycle_flowcytosep_duration01_fixed': False, 'cycle_flowcytosep_duration12_fixed': True, 'cycle_flowcytosep_duration23_fixed': True, 'cycle_flowcytosep_duration30_fixed': True, 'cycle_quiescent_duration01_fixed': False, 'cycle_quiescent_duration10_fixed': True, 'death_rate': '5.31667e-05', 'apoptosis_death_rate': '5.31667e-05', 'apoptosis_phase0_duration': '516', 'apoptosis_phase0_fixed': True, 'apoptosis_duration_flag': True, 'apoptosis_unlysed_rate': '0.05', 'apoptosis_lysed_rate': '0', 'apoptosis_cyto_rate': '1.66667e-02', 'apoptosis_nuclear_rate': '5.83333e-03', 'apoptosis_calcif_rate': '0', 'apoptosis_rel_rupture_volume': '2.0', 'necrosis_death_rate': '0.01', 'necrosis_trate01': '9.e9', 'necrosis_trate01_fixed': True, 'necrosis_trate12': '0.000012', 'necrosis_trate12_fixed': True, 'necrosis_duration_flag': True, 'necrosis_phase0_duration': '0', 'necrosis_phase0_fixed': True, 'necrosis_phase1_duration': '86400', 'necrosis_phase1_fixed': True, 'necrosis_unlysed_rate': '1.11667e-2', 'necrosis_lysed_rate': '8.33333e-4', 'necrosis_cyto_rate': '5.33333e-5', 'necrosis_nuclear_rate': '2.16667e-3', 'necrosis_calcif_rate': '0', 'necrosis_rel_rupture_rate': '2.0', 'volume_total': '2494', 'volume_fluid_fraction': '0.75', 'volume_nuclear': '540', 'volume_fluid_change_rate': '0.05', 'volume_cytoplasmic_rate': '0.0045', 'volume_nuclear_rate': '0.0055', 'volume_calcif_fraction': '0', 'volume_calcif_rate': '0', 'volume_rel_rupture_vol': '2.0', 'mechanics_adhesion': '0.4', 'mechanics_repulsion': '10.0', 'mechanics_adhesion_distance': '1.5', 'mechanics_relative_equilibrium_distance': '1.8', 'mechanics_absolute_equilibrium_distance': '15.12', 'mechanics_relative_equilibrium_distance_enabled': False, 'mechanics_absolute_equilibrium_distance_enabled': False, 'mechanics_elastic_constant': '0.01', 'mechanics_attachment_rate': '0.0', 'mechanics_detachment_rate': '0.0', 'speed': '0.1', 'persistence_time': '1', 'migration_bias': '.5', 'motility_enabled': True, 'motility_use_2D': True, 'motility_chemotaxis': False, 'motility_chemotaxis_towards': True, 'motility_advanced_chemotaxis': True, 'normalize_each_gradient': False, 'dead_phagocytosis_rate': '0', 'damage_rate': '1', 'intracellular': None, 'ID': '0', 'cycle': 'flow cytometry separated', 'cycle_duration_flag': False, 'apoptosis_trate01': '0.001938', 'apoptosis_trate01_fixed': True, 'is_movable': True, 'mechanics_BM_adhesion': '4.0', 'mechanics_BM_repulsion': '10.0', 'motility_chemotaxis_substrate': 'oxygen', 'motility_advanced_chemotaxis_substrate': 'oxygen', 'custom_data': {'sample': ['1.0', False]}}
DEBUG:root:
----
DEBUG:root:{'secretion': {'oxygen': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '10', 'net_export_rate': '0.0'}, 'apoptotic debris': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '1', 'net_export_rate': '0.0'}, 'necrotic debris': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '1', 'net_export_rate': '0.0'}}, 'chemotactic_sensitivity': {'oxygen': '0.0', 'apoptotic debris': '1', 'necrotic debris': '1'}, 'cell_adhesion_affinity': {'malignant epithelial cell': '1.0', '': '1.0', 'macrophage': '1.0'}, 'transformation_rate': {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}, 'live_phagocytosis_rate': {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}, 'attack_rate': {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}, 'fusion_rate': {'malignant epithelial cell': '0.0', '': '0.0', 'macrophage': '0.0'}, 'cycle_choice_idx': 0, 'cycle_live_trate00': '0.000', 'cycle_Ki67_trate01': '3.63108e-3', 'cycle_Ki67_trate10': '1.07527e-3', 'cycle_advancedKi67_trate01': '4.60405e-3', 'cycle_advancedKi67_trate12': '1.28205e-3', 'cycle_advancedKi67_trate20': '6.66666e-3', 'cycle_flowcyto_trate01': '0.00324', 'cycle_flowcyto_trate12': '0.00208', 'cycle_flowcyto_trate20': '0.00333', 'cycle_flowcytosep_trate01': '0.00335', 'cycle_flowcytosep_trate12': '0.00208', 'cycle_flowcytosep_trate23': '0.00417', 'cycle_flowcytosep_trate30': '0.01667', 'cycle_quiescent_trate01': '3.63108e-3', 'cycle_quiescent_trate10': '1.07527e-3', 'cycle_live_duration00': '1388.88889', 'cycle_Ki67_duration01': '275.40015', 'cycle_Ki67_duration10': '929.99898', 'cycle_advancedKi67_duration01': '217.20007', 'cycle_advancedKi67_duration12': '780.00078', 'cycle_advancedKi67_duration20': '150.00015', 'cycle_flowcyto_duration01': '308.64198', 'cycle_flowcyto_duration12': '480.76923', 'cycle_flowcyto_duration20': '300.30030', 'cycle_flowcytosep_duration01': '298.50746', 'cycle_flowcytosep_duration12': '480.76923', 'cycle_flowcytosep_duration23': '239.80815', 'cycle_flowcytosep_duration30': '59.88024', 'cycle_quiescent_duration01': '275.40016', 'cycle_quiescent_duration10': '929.99898', 'cycle_live_trate00_fixed': False, 'cycle_Ki67_trate01_fixed': False, 'cycle_Ki67_trate10_fixed': True, 'cycle_advancedKi67_trate01_fixed': False, 'cycle_advancedKi67_trate12_fixed': True, 'cycle_advancedKi67_trate20_fixed': True, 'cycle_flowcyto_trate01_fixed': False, 'cycle_flowcyto_trate12_fixed': False, 'cycle_flowcyto_trate20_fixed': False, 'cycle_flowcytosep_trate01_fixed': False, 'cycle_flowcytosep_trate12_fixed': False, 'cycle_flowcytosep_trate23_fixed': False, 'cycle_flowcytosep_trate30_fixed': False, 'cycle_quiescent_trate01_fixed': False, 'cycle_quiescent_trate10_fixed': True, 'cycle_live_duration00_fixed': False, 'cycle_Ki67_duration01_fixed': False, 'cycle_Ki67_duration10_fixed': True, 'cycle_advancedKi67_duration01_fixed': False, 'cycle_advancedKi67_duration12_fixed': True, 'cycle_advancedKi67_duration20_fixed': True, 'cycle_flowcyto_duration01_fixed': False, 'cycle_flowcyto_duration12_fixed': False, 'cycle_flowcyto_duration20_fixed': False, 'cycle_flowcytosep_duration01_fixed': False, 'cycle_flowcytosep_duration12_fixed': False, 'cycle_flowcytosep_duration23_fixed': False, 'cycle_flowcytosep_duration30_fixed': False, 'cycle_quiescent_duration01_fixed': False, 'cycle_quiescent_duration10_fixed': True, 'death_rate': '5.31667e-05', 'apoptosis_death_rate': '0', 'apoptosis_phase0_duration': '516', 'apoptosis_phase0_fixed': False, 'apoptosis_duration_flag': False, 'apoptosis_unlysed_rate': '0.05', 'apoptosis_lysed_rate': '0', 'apoptosis_cyto_rate': '1.66667e-02', 'apoptosis_nuclear_rate': '5.83333e-03', 'apoptosis_calcif_rate': '0', 'apoptosis_rel_rupture_volume': '2.0', 'necrosis_death_rate': '0.0', 'necrosis_trate01': '9e9', 'necrosis_trate01_fixed': False, 'necrosis_trate12': '1.15741e-05', 'necrosis_trate12_fixed': True, 'necrosis_duration_flag': False, 'necrosis_phase0_duration': '1.11111e-10', 'necrosis_phase0_fixed': False, 'necrosis_phase1_duration': '86399.80646', 'necrosis_phase1_fixed': True, 'necrosis_unlysed_rate': '1.11667e-02', 'necrosis_lysed_rate': '8.33333e-4', 'necrosis_cyto_rate': '5.33333e-05', 'necrosis_nuclear_rate': '2.16667e-4', 'necrosis_calcif_rate': '7e-05', 'necrosis_rel_rupture_rate': '2.0', 'volume_total': '2494', 'volume_fluid_fraction': '0.75', 'volume_nuclear': '540', 'volume_fluid_change_rate': '0.05', 'volume_cytoplasmic_rate': '0.0045', 'volume_nuclear_rate': '0.0055', 'volume_calcif_fraction': '0.0', 'volume_calcif_rate': '0.0', 'volume_rel_rupture_vol': '2', 'mechanics_adhesion': '0', 'mechanics_repulsion': '10.0', 'mechanics_adhesion_distance': '1.5', 'mechanics_relative_equilibrium_distance': '1.8', 'mechanics_absolute_equilibrium_distance': '15.12', 'mechanics_relative_equilibrium_distance_enabled': False, 'mechanics_absolute_equilibrium_distance_enabled': False, 'mechanics_elastic_constant': '0.01', 'mechanics_attachment_rate': '0.0', 'mechanics_detachment_rate': '0.0', 'speed': '1.0', 'persistence_time': '1.0', 'migration_bias': '0.0', 'motility_enabled': True, 'motility_use_2D': True, 'motility_chemotaxis': False, 'motility_chemotaxis_towards': True, 'motility_advanced_chemotaxis': True, 'normalize_each_gradient': False, 'dead_phagocytosis_rate': '0.0', 'damage_rate': '1.0', 'intracellular': None, 'ID': '1', 'cycle': 'flow cytometry separated', 'cycle_duration_flag': False, 'apoptosis_trate01': '0.001938', 'apoptosis_trate01_fixed': False, 'is_movable': True, 'mechanics_BM_adhesion': '4.0', 'mechanics_BM_repulsion': '10.0', 'motility_chemotaxis_substrate': 'oxygen', 'motility_advanced_chemotaxis_substrate': 'necrotic debris', 'custom_data': {'sample': ['0.0', False]}}
DEBUG:root:
----
DEBUG:root:--- renaming all dicts with cell defs
DEBUG:root:--- cdname = malignant epithelial cell
DEBUG:root:--- cdname = M0 macrophage
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['malignant epithelial cell', 'M0 macrophage']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0', 'M0 macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:M0 macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 1
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= M0 macrophage
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:
--- key in param_d.keys() = M0 macrophage
DEBUG:root:matched! M0 macrophage
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1.0', '': '1.0', 'M0 macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1.0
DEBUG:root:M0 macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'apoptotic debris': '1', 'necrotic debris': '1'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:apoptotic debris  --> 1
DEBUG:root:necrotic debris  --> 1
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= M0 macrophage
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= M0 macrophage
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for M0 macrophage
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for M0 macrophage
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['malignant epithelial cell', 'M0 macrophage']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0', 'M0 macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:M0 macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 1
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= M0 macrophage
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:
--- key in param_d.keys() = M0 macrophage
DEBUG:root:matched! M0 macrophage
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1.0', '': '1.0', 'M0 macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1.0
DEBUG:root:M0 macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'apoptotic debris': '1', 'necrotic debris': '1'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:apoptotic debris  --> 1
DEBUG:root:necrotic debris  --> 1
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= M0 macrophage
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= M0 macrophage
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for M0 macrophage
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for M0 macrophage
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['malignant epithelial cell', 'M0 macrophage']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0', 'M0 macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:M0 macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 1
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= M0 macrophage
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:
--- key in param_d.keys() = M0 macrophage
DEBUG:root:matched! M0 macrophage
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1.0', '': '1.0', 'M0 macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1.0
DEBUG:root:M0 macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'apoptotic debris': '1', 'necrotic debris': '1'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:apoptotic debris  --> 1
DEBUG:root:necrotic debris  --> 1
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= M0 macrophage
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= M0 macrophage
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for M0 macrophage
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for M0 macrophage
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_xmin,xmax=  (-500.0, 500.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_ymin,ymax=  (-500.0, 500.0)
DEBUG:root:ics_tab.py: volume= 2494.0, radius= 8.412710547954228
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_xmin,xmax=  (-500.0, 500.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_ymin,ymax=  (-500.0, 500.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_xmin,xmax=  (-500.0, 500.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_ymin,ymax=  (-500.0, 500.0)
DEBUG:root:ics_tab.py: volume= 2494.0, radius= 8.412710547954228
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['malignant epithelial cell', 'M0 macrophage']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0', 'M0 macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:M0 macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 1
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= M0 macrophage
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:
--- key in param_d.keys() = M0 macrophage
DEBUG:root:matched! M0 macrophage
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1.0', '': '1.0', 'M0 macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1.0
DEBUG:root:M0 macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'apoptotic debris': '1', 'necrotic debris': '1'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:apoptotic debris  --> 1
DEBUG:root:necrotic debris  --> 1
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= M0 macrophage
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= M0 macrophage
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for M0 macrophage
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for M0 macrophage
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_xmin,xmax=  (-500.0, 500.0)
DEBUG:root:ics_tab.py: -------- ICs: reset_plot_range(): plot_ymin,ymax=  (-500.0, 500.0)
DEBUG:root:ics_tab.py: volume= 2494.0, radius= 8.412710547954228
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['malignant epithelial cell', 'M0 macrophage']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0', 'M0 macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:M0 macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 1
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= M0 macrophage
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:
--- key in param_d.keys() = M0 macrophage
DEBUG:root:matched! M0 macrophage
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1.0', '': '1.0', 'M0 macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1.0
DEBUG:root:M0 macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'apoptotic debris': '1', 'necrotic debris': '1'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:apoptotic debris  --> 1
DEBUG:root:necrotic debris  --> 1
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= M0 macrophage
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= M0 macrophage
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for M0 macrophage
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for M0 macrophage
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['malignant epithelial cell', 'M0 macrophage']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0', 'M0 macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:M0 macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 1
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= M0 macrophage
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:
--- key in param_d.keys() = M0 macrophage
DEBUG:root:matched! M0 macrophage
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1.0', '': '1.0', 'M0 macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1.0
DEBUG:root:M0 macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'apoptotic debris': '1', 'necrotic debris': '1'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:apoptotic debris  --> 1
DEBUG:root:necrotic debris  --> 1
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= M0 macrophage
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= M0 macrophage
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for M0 macrophage
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for M0 macrophage
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x157e73730> <matplotlib.colors.Normalize object at 0x157e73730>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f59d070>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x157e73730> <matplotlib.colors.Normalize object at 0x157e73730>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f59d070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f6297c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a3748b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.FixedLocator object at 0x16c90c9d0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16b6796d0> <matplotlib.colors.Normalize object at 0x16b6796d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a3748b0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16b6796d0> <matplotlib.colors.Normalize object at 0x16b6796d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.FixedLocator object at 0x16c90c9d0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16b6796d0> <matplotlib.colors.Normalize object at 0x16b6796d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a3748b0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16b6796d0> <matplotlib.colors.Normalize object at 0x16b6796d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.FixedLocator object at 0x16c90c9d0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16a3d42b0> <matplotlib.colors.Normalize object at 0x16a3d42b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f6eedc0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16a3d42b0> <matplotlib.colors.Normalize object at 0x16a3d42b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f6eedc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b6afca0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f6e4790>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.FixedLocator object at 0x17f713130>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16c8a1f10> <matplotlib.colors.Normalize object at 0x16c8a1f10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f6e4790>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16c8a1f10> <matplotlib.colors.Normalize object at 0x16c8a1f10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.FixedLocator object at 0x17f713130>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16c8a1f10> <matplotlib.colors.Normalize object at 0x16c8a1f10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f6e4790>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16c8a1f10> <matplotlib.colors.Normalize object at 0x16c8a1f10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.FixedLocator object at 0x17f713130>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17ed9adc0> <matplotlib.colors.Normalize object at 0x17ed9adc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5839a0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17ed9adc0> <matplotlib.colors.Normalize object at 0x17ed9adc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5839a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b8b42b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edf82e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.FixedLocator object at 0x17e8f80d0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16a2e2670> <matplotlib.colors.Normalize object at 0x16a2e2670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edf82e0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16a2e2670> <matplotlib.colors.Normalize object at 0x16a2e2670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.FixedLocator object at 0x17e8f80d0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16a2e2670> <matplotlib.colors.Normalize object at 0x16a2e2670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edf82e0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16a2e2670> <matplotlib.colors.Normalize object at 0x16a2e2670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.FixedLocator object at 0x17e8f80d0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17e9dd8b0> <matplotlib.colors.Normalize object at 0x17e9dd8b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5a78e0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17e9dd8b0> <matplotlib.colors.Normalize object at 0x17e9dd8b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5a78e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f660910>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3d1340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3f5580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17ed96ee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f52b7c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8b2220>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f71bd00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f453130>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f4ef700>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edbb070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17ed86340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d236160>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e99ae50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f412070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c62d7f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b91e400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a41ae20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e901ee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b495df0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f71bc40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3d15b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c60bb20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c60bd30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e99fd30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8a18e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f558df0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f619880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x112ae2400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a382130>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['malignant epithelial cell', 'M0 macrophage']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0', 'M0 macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:M0 macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 1
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= M0 macrophage
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:
--- key in param_d.keys() = M0 macrophage
DEBUG:root:matched! M0 macrophage
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1.0', '': '1.0', 'M0 macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1.0
DEBUG:root:M0 macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'apoptotic debris': '1', 'necrotic debris': '1'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:apoptotic debris  --> 1
DEBUG:root:necrotic debris  --> 1
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= M0 macrophage
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= M0 macrophage
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for M0 macrophage
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for M0 macrophage
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17e8fd4c0> <matplotlib.colors.Normalize object at 0x17e8fd4c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b89dc70>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17e8fd4c0> <matplotlib.colors.Normalize object at 0x17e8fd4c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b89dc70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a2c7a30>
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['malignant epithelial cell', 'M0 macrophage']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0', 'M0 macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:M0 macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 1
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= M0 macrophage
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:
--- key in param_d.keys() = M0 macrophage
DEBUG:root:matched! M0 macrophage
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1.0', '': '1.0', 'M0 macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1.0
DEBUG:root:M0 macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'apoptotic debris': '1', 'necrotic debris': '1'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:apoptotic debris  --> 1
DEBUG:root:necrotic debris  --> 1
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= M0 macrophage
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= M0 macrophage
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for M0 macrophage
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for M0 macrophage
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f6d1f70> <matplotlib.colors.Normalize object at 0x17f6d1f70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1537a3220>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f6d1f70> <matplotlib.colors.Normalize object at 0x17f6d1f70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1537a3220>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1537956a0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17edb7280> <matplotlib.colors.Normalize object at 0x17edb7280>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b89e0d0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17edb7280> <matplotlib.colors.Normalize object at 0x17edb7280>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b89e0d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3bf3d0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17edc9a30> <matplotlib.colors.Normalize object at 0x17edc9a30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b6afb50>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17edc9a30> <matplotlib.colors.Normalize object at 0x17edc9a30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b6afb50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b6af820>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x157e736a0> <matplotlib.colors.Normalize object at 0x157e736a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f408cd0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x157e736a0> <matplotlib.colors.Normalize object at 0x157e736a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f408cd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edec3a0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17d317340> <matplotlib.colors.Normalize object at 0x17d317340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x153791cd0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17d317340> <matplotlib.colors.Normalize object at 0x17d317340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x153791cd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c912910>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16b90b520> <matplotlib.colors.Normalize object at 0x16b90b520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x153716b80>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16b90b520> <matplotlib.colors.Normalize object at 0x16b90b520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x153716b80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c665be0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16b906af0> <matplotlib.colors.Normalize object at 0x16b906af0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8a8dc0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16b906af0> <matplotlib.colors.Normalize object at 0x16b906af0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8a8dc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f498ee0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16b89ee80> <matplotlib.colors.Normalize object at 0x16b89ee80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b8b4640>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16b89ee80> <matplotlib.colors.Normalize object at 0x16b89ee80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b8b4640>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a412fa0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16a3e4f40> <matplotlib.colors.Normalize object at 0x16a3e4f40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8bfeb0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16a3e4f40> <matplotlib.colors.Normalize object at 0x16a3e4f40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8bfeb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b89e910>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e9f7eb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c912d30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f441400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b8b4850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a382f10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f633e50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5583a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b679970>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f71b730>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d260e80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f6167f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f67d8e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e99f400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17eda1a00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f52a8e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f8e63a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f8d8160>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c612b20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c612160>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e93ed00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b8f8e50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5719d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3e73d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3f5250>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b6aad60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c9123d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d23b9a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5dc340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f59dd30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d262be0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f539550>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17d276b80> <matplotlib.colors.Normalize object at 0x17d276b80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8a8c70>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17d276b80> <matplotlib.colors.Normalize object at 0x17d276b80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8a8c70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3e73d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e93e2b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16f1fdca0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e9ea8b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3bfd30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8a1a60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d26f580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e916ee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16f1d7160>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c6225e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f67ddf0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b8abf40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e8f38b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f6555e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c60b880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3d5400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d26d5b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17eda1ee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1537076d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b6b72e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3f5580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b90c1f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f52a730>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3c8d30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f8d2dc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f6e3370>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8a8130>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f8c30d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f6a8bb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3f0160>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f441130>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d260c70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c636040>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edc9520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17ed965e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a3ccdf0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a382d30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f453ca0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17ed963d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e9eeee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e93ed00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edc3f40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f660760>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a382e50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a41ae50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f55e610>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b91e370>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c6221f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f597520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b67bcd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edaafa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8b9460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17ed9d310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b8b4220>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f57da00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b6b75e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f62a730>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d277280>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8b23a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d23b0a0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17d208640> <matplotlib.colors.Normalize object at 0x17d208640>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b48bb50>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17d208640> <matplotlib.colors.Normalize object at 0x17d208640>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b48bb50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d1fbdc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c612280>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b464e80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3bf040>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x157e735b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b490ac0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c6222e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5f7fd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f52f1f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x157e67820>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x153782430>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edd5580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8b20d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f6482e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f58cac0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f6310a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f660d00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3ab940>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f70c1c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b89dd90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a3ac940>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edf2880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a3e4fa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d26f4f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17ed9a430>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b906580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3c9580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3c9b80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d297ca0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f498670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f562e80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3ab640>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edcf1c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edec6d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a3ac7f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b58f2e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f54c520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f505460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e99ad60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5200d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3bf4c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edc99a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f7468b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3bf6a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3d5340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3e2ca0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3e21f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b597700>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d309d60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d27c250>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f6137f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3cc5e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e8f3be0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f6d1bb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f42eeb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f558430>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d262820>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d260bb0>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['malignant epithelial cell', 'M0 macrophage']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0', 'M0 macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:M0 macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 1
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= M0 macrophage
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:
--- key in param_d.keys() = M0 macrophage
DEBUG:root:matched! M0 macrophage
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1.0', '': '1.0', 'M0 macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1.0
DEBUG:root:M0 macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'apoptotic debris': '1', 'necrotic debris': '1'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:apoptotic debris  --> 1
DEBUG:root:necrotic debris  --> 1
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= M0 macrophage
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= M0 macrophage
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for M0 macrophage
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for M0 macrophage
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 3
DEBUG:root:substrates_in_tree =['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = apoptotic debris
DEBUG:root:matched! apoptotic debris
DEBUG:root:microrenv_tab.py: key in param_d.keys() = necrotic debris
DEBUG:root:matched! necrotic debris
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['malignant epithelial cell', 'M0 macrophage']
DEBUG:root:
--- key in param_d.keys() = malignant epithelial cell
DEBUG:root:matched! malignant epithelial cell
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1', '': '1.0', 'M0 macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1
DEBUG:root:M0 macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '1', 'apoptotic debris': '0.0', 'necrotic debris': '0.0'}
DEBUG:root:oxygen  --> 1
DEBUG:root:apoptotic debris  --> 0.0
DEBUG:root:necrotic debris  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= malignant epithelial cell
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= M0 macrophage
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for malignant epithelial cell
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for malignant epithelial cell
DEBUG:root:
--- key in param_d.keys() = M0 macrophage
DEBUG:root:matched! M0 macrophage
DEBUG:root:--- cell_adhesion_affinity= {'malignant epithelial cell': '1.0', '': '1.0', 'M0 macrophage': '1.0'}
DEBUG:root:malignant epithelial cell  --> 1.0
DEBUG:root:M0 macrophage  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'apoptotic debris': '1', 'necrotic debris': '1'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:apoptotic debris  --> 1
DEBUG:root:necrotic debris  --> 1
DEBUG:root:self.substrate_list = ['oxygen', 'apoptotic debris', 'necrotic debris']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = apoptotic debris
DEBUG:root:substrate = necrotic debris
DEBUG:root:------------------- fill_xml_interactions():  cdef= M0 macrophage
DEBUG:root:--- live_phagocytosis_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= malignant epithelial cell
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= M0 macrophage
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- attack_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:--- fusion_rate= {'malignant epithelial cell': '0.0', '': '0.0', 'M0 macrophage': '0.0'}
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:malignant epithelial cell  --> 0.0
DEBUG:root:M0 macrophage  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for M0 macrophage
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for M0 macrophage
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f3c8d00> <matplotlib.colors.Normalize object at 0x17f3c8d00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5ae1c0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f3c8d00> <matplotlib.colors.Normalize object at 0x17f3c8d00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5ae1c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5ee8e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f590520>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f6ead00> <matplotlib.colors.Normalize object at 0x17f6ead00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3cf8b0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f6ead00> <matplotlib.colors.Normalize object at 0x17f6ead00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3cf8b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edca940>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b89d0a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3d51c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e8ecbe0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edc9ee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f8c3a60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c612190>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f717b80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e8ec430>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e901f10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b6aac10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f633490>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b595760>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c66cbe0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f6136d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e9ea310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f50c370>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e9f7460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d2f1d60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edb05e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f42fc10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b6af040>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b8f8640>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d27c280>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b89ebe0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8b28e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b67c400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f4410d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e8ecac0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f59d7f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a2e9130>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x153a0b0d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a2e92e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5e3e50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f746af0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f441310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edcae80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a2e2bb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b67ce80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f50c0a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f441820>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8b9340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e9ea5b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3c87c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8a19a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f453b50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b901af0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d276ee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f616dc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x153a2c940>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5802b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5a94c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f42f370>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f633be0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f4762b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b8f8f40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3d11c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f453fd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f42f1c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d26f430>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c6126d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b6af880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3d5c10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b901430>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d309460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5588e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e8ea8b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f441880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f57d040>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d276b80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b8f8bb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f0daee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3bfaf0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e8f3fa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3e2460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8a8730>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e8ea400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c6657f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a421fd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f506b20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f0c3970>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e8eab50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b6af820>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a412130>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e99fd30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a39d100>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b5cb430>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f8e6310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5e3d30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f0b1490>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5fea30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16f1fdf70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3a60a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b5e5bb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a41ad90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c62dee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b90bb20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3ab880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5e3520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c62d430>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e99a190>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edb2ee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e8ead60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edf2310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f448a30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f571790>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e8f81f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f440940>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a4123d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8a1a60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d260e80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x153a16940>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c627070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3cf160>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b89d9a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f616850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e901dc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a2e9040>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3cf910>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f606700>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16f1fd070>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f4df670> <matplotlib.colors.Normalize object at 0x17f4df670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f568d90>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f4df670> <matplotlib.colors.Normalize object at 0x17f4df670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f568d90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3d1910>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e8ed880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b89e160>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5a7e20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a3d4850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b4902b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b67cd30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b4666a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b89e700>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b490880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f50cc10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f568070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e90a400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b6af9a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8a1bb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f453f10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e9e6dc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8adc10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f616550>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e8f8790>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b89e220>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a39df40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f597c40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f8d29a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b5956d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f583760>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f633e50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c90c310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edc96a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b5937f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3b3d00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17ed95c70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f746ee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b901850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5bf400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b901ee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f8d2970>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16f1fd520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5f1ca0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a3ec310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b63ce80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f498820>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edee400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f633e80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e9f3550>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d297d60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3ab820>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f71ab50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3cc8b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edcaa90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e8ea280>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b90bc10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edee310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e8ead60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e8f31f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e8f3b20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c66caf0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x153716820>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edf89d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a3cc0a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f8c3280>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f6ea3d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edf2460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3a6b50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5a7160>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b5972e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a41a2b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3b15b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f717160>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c62d7c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f580d90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e9ead90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f54cbe0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f6294f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b6aaca0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5dc070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e8f37c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f0a5700>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3bf1f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f59d760>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f0a5730>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e8eac40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17e9017f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f0da400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17edf8700>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3e2a60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3a6ee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b89df10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f60deb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f0c3f10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f0b1040>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f590310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3bfb20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5ae9a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f8e6520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f8c3be0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x153a37850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b5df520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f54ca30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1538ba460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5aef40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f8c39a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b5e7520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b63c910>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f580790>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b89e7f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b9100d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3b30a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16c8a8640>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f0da880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16b595c10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5a91c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f3b3940>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f597ac0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f597f10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f5db310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f506070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17d27cee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f597820>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16a39dcd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f571a90>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f5650a0> <matplotlib.colors.Normalize object at 0x17f5650a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f8c37f0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x17f5650a0> <matplotlib.colors.Normalize object at 0x17f5650a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f8c37f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x17f8c3b20>
